<?xml version="1.0" encoding="iso-8859-1"?><xmi:XMI xmi:version="2.1" 
            xmlns:uml="http://schema.omg.org/spec/UML/2.1.2"
            xmlns:xmi="http://schema.omg.org/spec/XMI/2.1"
            xmlns:php="http://schemas/phpdoc/496002157efe3">
                <xmi:Documentation exporter="PEAR\PHP_UML"/><uml:Model xmi:type="uml:Model" name="PHP_UML"
            xmi:id="496002151ab45"  visibility="public" isAbstract="false" ><packagedElement xmi:type="uml:DataType" xmi:id="496002151caa6" name="mixed" /><packagedElement xmi:type="uml:DataType" xmi:id="496002151cac2" name="array" /><packagedElement xmi:type="uml:DataType" xmi:id="496002151cacf" name="string" /><packagedElement xmi:type="uml:DataType" xmi:id="496002151cadb" name="int" /><packagedElement xmi:type="uml:DataType" xmi:id="496002151cae7" name="integer" /><packagedElement xmi:type="uml:DataType" xmi:id="496002151caf2" name="bool" /><packagedElement xmi:type="uml:DataType" xmi:id="496002151cafe" name="boolean" /><packagedElement xmi:type="uml:DataType" xmi:id="496002151cb0a" name="float" /><packagedElement xmi:type="uml:DataType" xmi:id="496002151cb16" name="void" /><packagedElement xmi:type="uml:DataType" xmi:id="496002151cb81" name="null" /><packagedElement xmi:type="uml:DataType" xmi:id="496002151cba3" name="object" /><packagedElement xmi:type="uml:DataType" xmi:id="496002151cbb0" name="resource" /><packagedElement xmi:type="uml:Interface"  name="Iterator" xmi:id="496002151dbca" visibility="package" isAbstract="true"></packagedElement><packagedElement xmi:type="uml:Interface"  name="Countable" xmi:id="496002151dbe5" visibility="package" isAbstract="true"></packagedElement><packagedElement xmi:type="uml:Class" name="Exception" xmi:id="496002151eb77" visibility="package"
            isAbstract="false"></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="4960021525d60" name="PHP_UML"><packagedElement xmi:type="uml:Class" name="PHP_UML_Exception" xmi:id="4960021525e2d" visibility="package"
            isAbstract="false"><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f16c" annotatedElement="4960021525e2d"><body>A subclass for PHP_UML_Exception</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_FilePatternFilterIterator" xmi:id="4960021528d09" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="ignored" xmi:id="496002152ada0" visibility="protected" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="allowed" xmi:id="496002152ae6a" visibility="protected" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedOperation xmi:id="496002152be9c" 
            name="__construct" visibility="public" ><ownedParameter xmi:id="496002152d154" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002152d1ad" name="iterator" direction="in"><type xmi:idref="496002151dbca"/></ownedParameter><ownedParameter xmi:id="496002152d1f4" name="ignored" direction="in"><type xmi:idref="496002151cac2"/></ownedParameter><ownedParameter xmi:id="496002152d23f" name="allowed" direction="in"><type xmi:idref="496002151cac2"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f2b3" annotatedElement="496002152be9c"><body>Constructor</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002152d33e" 
            name="accept" visibility="public" ><ownedParameter xmi:id="496002152d445" name="return" direction="return"><type xmi:idref="496002151cafe"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f2ff" annotatedElement="496002152d33e"><body>Filter files and folders.
If the element is a file or a folder, it must not be among the ingored elts.
If it a file, it must match the file patterns.</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002152d81d" 
            name="getChildren" visibility="public" ><ownedParameter xmi:id="496002152d8e0" name="return" direction="return"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f34c" annotatedElement="496002152d81d"><body>We must override that method to pass the ignored/allowed arrays</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f376" annotatedElement="4960021528d09"><body>Specialized iterator for the filesystem scan.
It can accept/stop the recursive scan, according to allow/ignore file patterns</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_SimpleUID" xmi:id="4960021557c8b" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="PREFIX" xmi:id="4960021557e49" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157f3be" value="&#039;PHP_UML_&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="counter" xmi:id="4960021557ef0" visibility="private"  isStatic="true"><type xmi:idref="496002151cadb"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157f411" value="0" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="deterministic" xmi:id="4960021557f94" visibility="public"  isStatic="true"><type xmi:idref="496002151caf2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157f44e" value="false" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f479" annotatedElement="4960021557f94"><body>If true, the IDs contained in the XMI code will be very deterministic.
This is useful for running the PHP_UML test suite. Most of the time, you will want to have more unique IDs, so leave that property to false (the generation will then rely on uniqid()).</body></ownedComment></ownedAttribute><ownedOperation xmi:id="49600215580a8" 
            name="getUID" visibility="public"  isStatic="true"><ownedParameter xmi:id="4960021558168" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f4cf" annotatedElement="49600215580a8"><body>Accessor for getting the UID</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155825f" 
            name="reset" visibility="public"  isStatic="true"><ownedParameter xmi:id="49600215582de" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f51c" annotatedElement="496002155825f"><body>Reset the deterministic generator</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f543" annotatedElement="4960021557c8b"><body>A class for generating unique IDs, in two possible ways.

Almost every XMI element contains a UID. This class can generate both globally unique IDs, and deterministic unique IDs (ie. the IDs are the same every time the parser is run again). We need such deterministic IDs because of the PHP_UML test suite, which would report errors otherwise (because of different IDs !) You select which one by setting the boolean property $determinisic to true/false</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Warning" xmi:id="4960021558d3b" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="stack" xmi:id="4960021558ed6" visibility="public"  isStatic="true"><type xmi:idref="496002151cac2"/><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f5b8" annotatedElement="4960021558ed6"><body>The $stack to read.</body></ownedComment></ownedAttribute><ownedOperation xmi:id="4960021558fe1" 
            name="add" visibility="public"  isStatic="true"><ownedParameter xmi:id="496002155909e" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215590ce" name="message" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f626" annotatedElement="4960021558fe1"><body>Adds a warning message to the pile</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155918e" 
            name="clear" visibility="public"  isStatic="true"><ownedParameter xmi:id="496002155920a" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f672" annotatedElement="496002155918e"><body>Clears the pile</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f69b" annotatedElement="4960021558d3b"><body>Maintains a stack of warning messages.

Worth being checked after a parsing, especially if several classes share common names, in the PHP files</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML" xmi:id="496002156c4ee" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="PATTERN_SEPARATOR" xmi:id="496002156c74c" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157f6e3" value="&#039;,&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="logicalView" xmi:id="496002156c7f7" visibility="public" ><type xmi:idref="496002151caf2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157f723" value="true" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f74e" annotatedElement="496002156c7f7"><body>If true, a UML logical view is created.</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="deploymentView" xmi:id="496002156c8f2" visibility="public" ><type xmi:idref="496002151caf2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157f770" value="true" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f79b" annotatedElement="496002156c8f2"><body>If true, a UML deployment view is created.
Each file produces an artifact.</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="componentView" xmi:id="496002156c9eb" visibility="public" ><type xmi:idref="496002151caf2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157f7bc" value="false" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f7e6" annotatedElement="496002156c9eb"><body>If true, a component view is created.
file system. Each file produces an component</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="docblocks" xmi:id="496002156cb0f" visibility="public" ><type xmi:idref="496002151caf2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157f809" value="true" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f833" annotatedElement="496002156cb0f"><body>If true, docblocks are interpreted (especially @package and @param, which can have a major influence)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="dollar" xmi:id="496002156cc09" visibility="public" ><type xmi:idref="496002151caf2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157f856" value="true" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f880" annotatedElement="496002156cc09"><body>If true, the PHP variable prefix $ is kept</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="model" xmi:id="496002156ccda" visibility="public" ><type xmi:idref="4960021538b28"/><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f8c4" annotatedElement="496002156ccda"><body>A reference to a PHP_UML_Metamodel_Superstructure object.</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="directories" xmi:id="496002156d2a3" visibility="private" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157f8e7" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f911" annotatedElement="496002156d2a3"><body>List of directories to scan</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="files" xmi:id="496002156d493" visibility="private" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157f934" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f95d" annotatedElement="496002156d493"><body>List of files to scan</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="matchPatterns" xmi:id="496002156d5e7" visibility="private" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157f980" value="array(&#039;*.php&#039;)" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f9aa" annotatedElement="496002156d5e7"><body>Allowed filenames (possible wildcards are ? and *)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="ignorePatterns" xmi:id="496002156d6fc" visibility="private" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157f9ce" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157f9f9" annotatedElement="496002156d6fc"><body>Ignored directories (possible wildcards are ? and *)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="xmi" xmi:id="496002156d7f2" visibility="private" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157fa1c" value="&#039;&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157fa45" annotatedElement="496002156d7f2"><body>The concatened XMI string</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="parser" xmi:id="496002156d905" visibility="private" ><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157fa89" annotatedElement="496002156d905"><body>A reference to a PHP_UML_PHP_Parser object</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="builder" xmi:id="496002156d9ef" visibility="private" ><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157face" annotatedElement="496002156d9ef"><body>A reference to a PHP_UML_XMI_BuilderImplX object</body></ownedComment></ownedAttribute><ownedOperation xmi:id="496002156dad0" 
            name="__construct" visibility="public" ><ownedParameter xmi:id="496002156db52" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157fb25" annotatedElement="496002156dad0"><body>Constructor</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002156dbc5" 
            name="parseFile" visibility="public" ><ownedParameter xmi:id="496002156dcbe" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156dce8" name="files" direction="in"><type xmi:idref="496002151caa6"/></ownedParameter><ownedParameter xmi:id="496002156dd3b" name="model" direction="in"><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157fb8e" value="&#039;default&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157fbbb" annotatedElement="496002156dbc5"><body>Parses a PHP file, and builds a PHP_UML_Metamodel_Superstructure object corresponding to what has been found in the file.
To get the XMI serialization of that object, run generateXMI()</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002156ddf7" 
            name="readXMIFile" visibility="public" ><ownedParameter xmi:id="496002156dea7" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156decd" name="filepath" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157fc2d" annotatedElement="496002156ddf7"><body>Read the content of an existing XMI file</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002156df79" 
            name="setInput" visibility="public" ><ownedParameter xmi:id="496002156e02b" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156e055" name="pathes" direction="in"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157fc98" annotatedElement="496002156df79"><body>Set the input elements (files and/or directories) to parse</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002156e330" 
            name="setMatchPatterns" visibility="public" ><ownedParameter xmi:id="496002156e418" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156e440" name="patterns" direction="in"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157fd02" annotatedElement="496002156e330"><body>Setter for the filename patterns.
Usage: $phpuml-&gt;setFilePatterns(array('*.php', '*.php5')); Or:    $phpuml-&gt;setFilePatterns('*.php, *.php5');</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002156e5c2" 
            name="setIgnorePatterns" visibility="public" ><ownedParameter xmi:id="496002156e698" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156e6c3" name="patterns" direction="in"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157fd75" annotatedElement="496002156e5c2"><body>Set a list of files / directories to ignore during parsing Usage: $phpuml-&gt;setIgnorePatterns(array('examples', '.svn')); Or:    $phpuml-&gt;setIgnorePatterns('examples .svn');</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002156e849" 
            name="parseDirectory" visibility="public" ><ownedParameter xmi:id="496002156e948" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156e971" name="directories" direction="in"><type xmi:idref="496002151caa6"/></ownedParameter><ownedParameter xmi:id="496002156e9c2" name="model" direction="in"><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157fde4" value="&#039;default&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002157ff25" annotatedElement="496002156e849"><body>Parses a PHP folder, and builds a PHP_UML_Metamodel_Superstructure object corresponding to what has been parsed.
To get the XMI serialization of that object, run generateXMI()</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002156ea77" 
            name="parse" visibility="public" ><ownedParameter xmi:id="496002156eb3b" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156eb75" name="modelName" direction="in"><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002157ffe2" value="&#039;default&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158003a" annotatedElement="496002156ea77"><body>Parse directories and files, depending on what the &quot;_directories&quot; and &quot;_files&quot; properties have been set to (with setDirectory() and setFile())</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002156f334" 
            name="generateXMI" visibility="public" ><ownedParameter xmi:id="496002156f494" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156f4d6" name="version" direction="in"><type xmi:idref="496002151cb0a"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215800b3" value="2.1" /></ownedParameter><ownedParameter xmi:id="496002156f524" name="encoding" direction="in"><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215800ef" value="&#039;iso-8859-1&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580134" annotatedElement="496002156f334"><body>Runs the XMI generator on the PHP model stored in $this-&gt;model.

After their PHP parsing, parseDirectory() or parseFile() will have set $this-&gt;model for you.

If you need to use the XMI generator without any previous PHP parsing, simply set $this-&gt;model with a proper PHP_UML_Metamodel_Superstructure object</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002156fa0f" 
            name="saveXMI" visibility="public" ><ownedParameter xmi:id="496002156faf0" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156fb1a" name="outputFile" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215801d1" annotatedElement="496002156fa0f"><body>Saves the previously generated XMI to a file You must run that method to get your XMI, or you can access the XMI property</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002156fca1" 
            name="export" visibility="public" ><ownedParameter xmi:id="496002156fe5d" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156fe8f" name="format" direction="in"><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002158021c" value="&#039;xmi&#039;" /></ownedParameter><ownedParameter xmi:id="496002156fed1" name="outputDir" direction="in"><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021580241" value="&#039;.&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158026d" annotatedElement="496002156fca1"><body>Generates the output data 
The default format is XMI.
But PHP_UML comes with two additional formats:
- HTML (an API documentation, very similar to Javadoc) - PHP code generation (a simple PHP code skeleton) 
The templates are stored under /Output/&lt;format_name&gt;/ You are free to develop your owns.
Except for XMI (which is internally generated), the generation is done through a complex XSLT transformation, applied to XMI data.
PHP_UML will look for a &quot;main.xsl&quot; file, in the folder of the desired format.

Since the generation rely on XMI data, an XMI generation will be performed in all cases.</body></ownedComment></ownedOperation><ownedOperation xmi:id="49600215700ad" 
            name="getXMI" visibility="public" ><ownedParameter xmi:id="496002157016f" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215802c7" annotatedElement="49600215700ad"><body>Public accessor to the XMI code</body></ownedComment></ownedOperation><ownedOperation xmi:id="49600215701f2" 
            name="addLogicalView" visibility="private" ><ownedParameter xmi:id="49600215702a4" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215702d4" name="package" direction="in"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158032d" annotatedElement="49600215701f2"><body>Inserts the logical view of the model</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002157043a" 
            name="addComponentView" visibility="private" ><ownedParameter xmi:id="49600215704f2" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021570522" name="package" direction="in"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580393" annotatedElement="496002157043a"><body>Inserts a component view of the logical system</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021570609" 
            name="addDeploymentView" visibility="private" ><ownedParameter xmi:id="49600215706fb" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002157072a" name="package" direction="in"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215803fa" annotatedElement="4960021570609"><body>Inserts a deployment view of the scanned file system, through artifacts.
A file is viewed as an artifact (artifacts exist from UML 1.4) Filesystem's folders are treated as packages.
TODO: use a package-tree, like with logical packages</body></ownedComment></ownedOperation><ownedOperation xmi:id="49600215707e2" 
            name="addStereotypeInstances" visibility="private" ><ownedParameter xmi:id="4960021570867" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580448" annotatedElement="49600215707e2"><body>Adds the instances of stereotypes At the current time, there are only XML metadata, not real UML stereotypes</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021570950" 
            name="autoload" visibility="public"  isStatic="true"><ownedParameter xmi:id="4960021570c17" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021570c6a" name="class" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215804b2" annotatedElement="4960021570950"><body>Autoloader</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215804df" annotatedElement="496002156c4ee"><body>The main class to use, through its methods:
- setFiles(), setDirectories() and parse() - parseFile() and parseDirectory() - generateXMI() - saveXMI() 
For example:
&lt;code&gt; $t = new PHP_UML(); $t-&gt;parseDirectory('PHP_UML/'); $t-&gt;generateXMI(2); $t-&gt;saveXMI('PHP_UML2.xmi'); &lt;/code&gt; 
If you want to produce XMI without using the PHP parser, please refer to the file /examples/test_with_api.php; it will show how you can build a model by yourself, with the PHP_UML_Metamodel package.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="496002152e844" name="Metamodel"><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Class" xmi:id="496002152e8d1" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="496002158057a" general="4960021531374"/> <ownedAttribute xmi:type="uml:Property" name="ownedAttribute" xmi:id="496002152ea8d" visibility="public" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215805ab" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="isAbstract" xmi:id="496002152eb42" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="isInstantiable" xmi:id="496002152ebbb" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="implements" xmi:id="496002152ec5d" visibility="public" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021580656" value="array()" /></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580696" annotatedElement="496002152e8d1"><body>Meta-Class</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Enumeration" xmi:id="496002152f771" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="datatypes" xmi:id="496002152f931" visibility="public"  isStatic="true"><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215806d5" value="array(&#039;mixed&#039;,&#039;array&#039;,&#039;string&#039;,&#039;int&#039;,&#039;integer&#039;,&#039;bool&#039;,&#039;boolean&#039;,&#039;float&#039;,&#039;void&#039;,&#039;null&#039;,&#039;object&#039;,&#039;resource&#039;)" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158070d" annotatedElement="496002152f931"><body>Datatypes of the language</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="interfaces" xmi:id="496002152fa62" visibility="public"  isStatic="true"><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002158072f" value="array(&#039;Iterator&#039;,&#039;Countable&#039;)" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="classes" xmi:id="496002152fb0d" visibility="public"  isStatic="true"><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021580770" value="array(&#039;Exception&#039;)" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="filetype" xmi:id="496002152fbc4" visibility="public"  isStatic="true"><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215807ae" value="array(&#039;PHP File&#039;)" /><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215807da" annotatedElement="496002152fbc4"><body>Main file types. Used as stereotypes for qualifying the artifacts.</body></ownedComment></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580802" annotatedElement="496002152f771"><body>Meta-Enumeration Enumerates some basic PHP types.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_File" xmi:id="49600215306d9" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="496002158082d" general="4960021532279"/> <ownedAttribute xmi:type="uml:Property" name="manifested" xmi:id="4960021530803" visibility="public" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021580855" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580881" annotatedElement="4960021530803"><body>Array of classes/interfaces declarations contained in that file</body></ownedComment></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215808a7" annotatedElement="49600215306d9"><body>Meta-File</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Interface" xmi:id="4960021531374" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="49600215808cd" general="496002153e56a"/> <ownedAttribute xmi:type="uml:Property" name="superClass" xmi:id="49600215315a7" visibility="public" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215808f4" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="ownedOperation" xmi:id="4960021531657" visibility="public" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021580931" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="file" xmi:id="49600215316c6" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="package" xmi:id="496002153173b" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215809de" annotatedElement="4960021531374"><body>PHP_UML (MOF-like metamodel of language PHP) 
PHP version 5</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_NamedElement" xmi:id="4960021532279" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="id" xmi:id="49600215323e3" visibility="public" ><type xmi:idref="496002151cacf"/><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580a3f" annotatedElement="49600215323e3"><body>Unique identifier</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="name" xmi:id="49600215324db" visibility="public" ><type xmi:idref="496002151cacf"/><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580a81" annotatedElement="49600215324db"><body>Name</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="description" xmi:id="49600215325bb" visibility="public" ><type xmi:idref="4960021536f1d"/><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580ad5" annotatedElement="49600215325bb"><body>Reference to a &quot;documention&quot; stereotype</body></ownedComment></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580afc" annotatedElement="4960021532279"><body>The NamedElement class</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Operation" xmi:id="49600215330e2" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="4960021580b27" general="4960021532279"/> <ownedAttribute xmi:type="uml:Property" name="isAbstract" xmi:id="49600215332e6" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="isInstantiable" xmi:id="4960021533372" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="ownedParameter" xmi:id="4960021533419" visibility="public" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021580bb4" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="class" xmi:id="496002153348e" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="visibility" xmi:id="4960021533508" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580c63" annotatedElement="49600215330e2"><body>PHP_UML (MOF-like metamodel of language PHP) 
PHP version 5</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Package" xmi:id="496002153424d" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="4960021580c89" general="4960021532279"/> <ownedAttribute xmi:type="uml:Property" name="nestingPackage" xmi:id="4960021534452" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="nestedPackage" xmi:id="496002153451d" visibility="public" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021580ce2" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="ownedType" xmi:id="49600215345be" visibility="public" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021580d1d" value="array()" /></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580d64" annotatedElement="496002153424d"><body>PHP_UML (MOF-like metamodel of language PHP) 
PHP version 5</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Parameter" xmi:id="49600215350f2" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="4960021580d91" general="496002153f292"/> <ownedAttribute xmi:type="uml:Property" name="default" xmi:id="49600215352fb" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="operation" xmi:id="496002153538e" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="direction" xmi:id="496002153540e" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580e5e" annotatedElement="49600215350f2"><body>PHP_UML (MOF-like metamodel of language PHP) 
PHP version 5</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Property" xmi:id="4960021535eeb" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="4960021580e86" general="496002153f292"/> <ownedAttribute xmi:type="uml:Property" name="isReadOnly" xmi:id="49600215361af" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="isInstantiable" xmi:id="4960021536248" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="visibility" xmi:id="49600215362ba" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="default" xmi:id="496002153632c" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="class" xmi:id="49600215363a0" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021580fb8" annotatedElement="4960021535eeb"><body>PHP_UML (MOF-like metamodel of language PHP) 
PHP version 5</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Stereotype" xmi:id="4960021536f1d" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="4960021580fde" general="4960021532279"/> <ownedAttribute xmi:type="uml:Property" name="element" xmi:id="49600215370b6" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="ownedAttribute" xmi:id="4960021537173" visibility="public" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021581035" value="array()" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="profile" xmi:id="49600215371e5" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215810ab" annotatedElement="4960021536f1d"><body>The stereotype class</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Superstructure" xmi:id="4960021538b28" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="packages" xmi:id="4960021538d5c" visibility="public" ><type xmi:idref="496002153424d"/><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158110f" annotatedElement="4960021538d5c"><body>The root package (a UML Model)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="deploymentPackages" xmi:id="4960021538e57" visibility="public" ><type xmi:idref="496002153424d"/><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021581151" annotatedElement="4960021538e57"><body>The root package (= the physical folder)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="stereotypes" xmi:id="4960021538f71" visibility="public" ><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021581171" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158119c" annotatedElement="4960021538f71"><body>Stack of all stereotypes TODO: when real stereotypes will be implemented, deleting that array, and reading the stereotypes from the $packages instead</body></ownedComment></ownedAttribute><ownedOperation xmi:id="4960021539073" 
            name="__construct" visibility="public" ><ownedParameter xmi:id="49600215390f0" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215811f3" annotatedElement="4960021539073"><body>Constructor</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002153915b" 
            name="addInternalPhpTypes" visibility="public" ><ownedParameter xmi:id="49600215392a3" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215392e0" name="package" direction="inout"><type xmi:idref="496002153424d"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158125c" annotatedElement="496002153915b"><body>Adds the internal PHP datatypes, classes, interfaces...
To be completed...</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002153962e" 
            name="resolveReferences" visibility="private" ><ownedParameter xmi:id="496002153978a" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215397d4" name="ns" direction="inout"><type xmi:idref="496002153424d"/></ownedParameter><ownedParameter xmi:id="4960021539838" name="_oDef" direction="inout"><type xmi:idref="496002151cac2"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215812e3" annotatedElement="496002153962e"><body>Recursively replaces all the &quot;named types&quot; by a proper &quot;reference&quot; to a typed element. This impacts:
- the extended classes and implemented classes (through their EMOF-&quot;superClass&quot; and &quot;implements&quot; relations) - the function parameters (through their EMOF-&quot;type&quot; attribute) - the properties in classes (through their EMOF-&quot;type&quot; attribute)</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021539e10" 
            name="searchTypeIntoPackage" visibility="public" ><ownedParameter xmi:id="4960021539f16" name="return" direction="return"><type xmi:idref="496002151caa6"/></ownedParameter><ownedParameter xmi:id="4960021539f4c" name="ns" direction="inout"><type xmi:idref="496002153424d"/></ownedParameter><ownedParameter xmi:id="4960021539f8f" name="value" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021581374" annotatedElement="4960021539e10"><body>Searches in a given package for a typed element (likely, a class)</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002153a0e1" 
            name="getStereotype" visibility="public" ><ownedParameter xmi:id="496002153a20a" name="return" direction="return"><type xmi:idref="4960021536f1d"/></ownedParameter><ownedParameter xmi:id="496002153a241" name="element" direction="inout"><type xmi:idref="4960021532279"/></ownedParameter><ownedParameter xmi:id="496002153a280" name="profileName" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002153a2bc" name="stereotypeName" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158141c" annotatedElement="496002153a0e1"><body>Retrieves the stereotype (named $name) associated to the element $element If not found, returns null.</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002153a438" 
            name="createStereotype" visibility="public" ><ownedParameter xmi:id="496002153a55f" name="return" direction="return"><type xmi:idref="4960021536f1d"/></ownedParameter><ownedParameter xmi:id="496002153a595" name="element" direction="inout"><type xmi:idref="4960021532279"/></ownedParameter><ownedParameter xmi:id="496002153a5d4" name="profileName" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002153a610" name="stereotypeName" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215814c0" annotatedElement="496002153a438"><body>Creates a stereotype in a given profile, and binds it to a given element Returns the stereotype that was created</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002153a765" 
            name="getStereotypeTag" visibility="public"  isStatic="true"><ownedParameter xmi:id="496002153a8a1" name="return" direction="return"><type xmi:idref="496002153d8c9"/></ownedParameter><ownedParameter xmi:id="496002153a8d4" name="s" direction="in"><type xmi:idref="4960021536f1d"/></ownedParameter><ownedParameter xmi:id="496002153a90e" name="tagName" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021581548" annotatedElement="496002153a765"><body>Retrieves a particular tag in a given stereotype</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002153aa62" 
            name="searchIntoSubpackage" visibility="public" ><ownedParameter xmi:id="496002153ab83" name="return" direction="return"><type xmi:idref="496002151caa6"/></ownedParameter><ownedParameter xmi:id="496002153abba" name="np" direction="inout"><type xmi:idref="496002153424d"/></ownedParameter><ownedParameter xmi:id="496002153abf3" name="value" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215815ce" annotatedElement="496002153aa62"><body>Searches recursively in a given package for a package, knowing its name Works with position numbers, not variable references.</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002153ad25" 
            name="resolveType" visibility="private" ><ownedParameter xmi:id="496002153ae3c" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002153ae75" name="pkg" direction="inout"><type xmi:idref="496002153424d"/></ownedParameter><ownedParameter xmi:id="496002153aeb6" name="element" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedParameter xmi:id="496002153aefb" name="pkgDef" direction="inout"><type xmi:idref="496002151cac2"/></ownedParameter><ownedParameter xmi:id="496002153af3b" name="context" direction="inout"><type xmi:idref="496002153e56a"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215816cd" annotatedElement="496002153ad25"><body>Does the type resolution for a given element in a given package</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002153b6cf" 
            name="resolutionWarning" visibility="private" ><ownedParameter xmi:id="496002153b7df" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002153b812" name="element" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002153b859" name="file" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021581752" annotatedElement="496002153b6cf"><body>Resolution error. Might later be isolated in a specific class.</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002153b90f" 
            name="getPackagePathParts" visibility="public" ><ownedParameter xmi:id="496002153ba5c" name="return" direction="return"><type xmi:idref="496002151cac2"/></ownedParameter><ownedParameter xmi:id="496002153ba87" name="path" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002153badf" name="modeFirst" direction="in"><type xmi:idref="496002151caf2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215817b9" value="true" /></ownedParameter><ownedParameter xmi:id="496002153bb29" name="alt" direction="in"><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215817de" value="PHP_UML_PHP_ParserT_NS_SEPARATOR2" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158180e" annotatedElement="496002153b90f"><body>Splits a package path into its first/last element, and the rest Allows for the two different versions of package delimiter</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002153c0f5" 
            name="getPackageFromPath" visibility="private" ><ownedParameter xmi:id="496002153c230" name="return" direction="return"><type xmi:idref="496002153424d"/></ownedParameter><ownedParameter xmi:id="496002153c261" name="path" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158187f" annotatedElement="496002153c0f5"><body>Retrieve the PHP_UML_Metamodel_Package object related to a package path (ie, to a qualified name, like A\B\C).
Relies on the model-&gt;$packages, when references are still named (= before their resolution)</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002153c45c" 
            name="resolveAll" visibility="public" ><ownedParameter xmi:id="496002153c55d" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002153c5b3" name="defPkg" direction="in"><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215818d0" value="array()" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215818fb" annotatedElement="496002153c45c"><body>Launch the resolution of the references for all stacks from the root pkg 
Every reference (a temporary string) is replaced by a PHP reference to the corresponding type (that is, a class or a datatype) Must be run once the model is complete (= once PHP parsing is done)</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021581929" annotatedElement="4960021538b28"><body>A superstructure to gather program elements A PHP_UML_Metamodel_Superstructure object reflects the structure of some existing PHP code (like the one parsed by the parser), in termes of packages, classes, functions, etc.
Once such an object is built, we just need to &quot;serialize&quot; it to get the XMI code.
This is the job of PHP_UML-&gt;generateXMI() 
Normally, such a PHP_UML_Metamodel_Superstructure object is built and passed to the PHP_UML_PHP_Parser by an instance of PHP_UML.</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Tag" xmi:id="496002153d8c9" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="496002158197c" general="4960021532279"/> <ownedAttribute xmi:type="uml:Property" name="value" xmi:id="496002153dabb" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215819ea" annotatedElement="496002153d8c9"><body>PHP_UML (MOF-like metamodel of language PHP) 
PHP version 5</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_Type" xmi:id="496002153e56a" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="4960021581a0f" general="4960021532279"/> <ownedComment xmi:type="uml:Comment"
                xmi:id="4960021581a41" annotatedElement="496002153e56a"><body>PHP_UML (MOF-like metamodel of language PHP) 
PHP version 5</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_Metamodel_TypedElement" xmi:id="496002153f292" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="4960021581a66" general="4960021532279"/> <ownedAttribute xmi:type="uml:Property" name="type" xmi:id="496002153f4c0" visibility="public" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021581acb" annotatedElement="496002153f292"><body>PHP_UML (MOF-like metamodel of language PHP) 
PHP version 5</body></ownedComment></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="4960021540a0a" name="Output"><packagedElement xmi:type="uml:Class" name="PHP_UML_Output_Exporter" xmi:id="4960021540b16" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="APP_NAME" xmi:id="4960021540cbb" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021581bb8" value="&#039;PHP_UML&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="RESOURCES_FOLDER" xmi:id="4960021540d5c" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021581bfe" value="&#039;resources&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="STARTING_TPL" xmi:id="4960021540de4" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021581c3b" value="&#039;main.xsl&#039;" /></ownedAttribute><ownedOperation xmi:id="4960021540e82" 
            name="generateFromFile" visibility="public"  isStatic="true"><ownedParameter xmi:id="4960021540f79" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021540fa6" name="outputDir" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021540fed" name="xslFile" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021541028" name="xmlFile" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021581d03" annotatedElement="4960021540e82"><body>Generates output data by applying a transformation on a given XMI file</body></ownedComment></ownedOperation><ownedOperation xmi:id="49600215411e6" 
            name="generateFromXml" visibility="public"  isStatic="true"><ownedParameter xmi:id="49600215412d8" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021541302" name="outputDir" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021541341" name="xslFile" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002154137b" name="xmlData" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021581da8" annotatedElement="49600215411e6"><body>Generates ouput data by applying a transformation on some provided XMI</body></ownedComment></ownedOperation><ownedOperation xmi:id="49600215414c9" 
            name="generateFromFormat" visibility="public"  isStatic="true"><ownedParameter xmi:id="49600215415b5" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215415dd" name="outputDir" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002154161b" name="format" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021541654" name="xmlData" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021581e4b" annotatedElement="49600215414c9"><body>Generates output data by applying a transformation on some provided XMI</body></ownedComment></ownedOperation><ownedOperation xmi:id="49600215417f6" 
            name="generate" visibility="public"  isStatic="true"><ownedParameter xmi:id="496002154190c" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021541936" name="outputDir" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021541974" name="xslFile" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="49600215419f1" name="xmlDom" direction="in"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021581eef" annotatedElement="49600215417f6"><body>Generates output data by applying a transformation on a Dom Document</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021541ef3" 
            name="createFolder" visibility="public"  isStatic="true"><ownedParameter xmi:id="4960021541fba" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021541fe6" name="path" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021581f58" annotatedElement="4960021541ef3"><body>Creates a folder</body></ownedComment></ownedOperation><ownedOperation xmi:id="49600215421b6" 
            name="saveToFile" visibility="public"  isStatic="true"><ownedParameter xmi:id="4960021542287" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215422b0" name="name" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="49600215422ef" name="content" direction="in"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021581fde" annotatedElement="49600215421b6"><body>Saves a content to a file. Callback function for the XSL templates.</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002154252a" 
            name="copyResources" visibility="public"  isStatic="true"><ownedParameter xmi:id="49600215425e1" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021542618" name="path" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158204a" annotatedElement="496002154252a"><body>Copy the &quot;resources&quot; folder</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582076" annotatedElement="4960021540b16"><body>Exportation class.
Currently, this class reads XMI data, and applies an XSL transformation.
Two formats are available: html and php.</body></ownedComment></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="4960021549489" name="PHP"><packagedElement xmi:type="uml:Class" name="PHP_UML_PHP_Parser" xmi:id="49600215494af" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="PHP_PROFILE_NAME" xmi:id="49600215496b6" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021582102" value="&#039;php&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="PHP_STEREOTYPE_DOCBLOCK" xmi:id="4960021549751" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021582151" value="&#039;docblock&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="T_NS_SEPARATOR" xmi:id="49600215497db" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002158218e" value="&#039;\\&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="T_NS_SEPARATOR2" xmi:id="4960021549866" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215821ca" value="&#039;::&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="model" xmi:id="49600215498fd" visibility="public"  isStatic="true"><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582226" annotatedElement="49600215498fd"><body>Reference to a PHP_UML_Metamodel_Superstructure (where the parser stores all the program elements it finds)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="file" xmi:id="4960021549a02" visibility="private"  isStatic="true"><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582269" annotatedElement="4960021549a02"><body>Current PHP_UML_Metamodel_File</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="docblocks" xmi:id="4960021549af2" visibility="private"  isStatic="true"><type xmi:idref="496002151caf2"/><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215822ab" annotatedElement="4960021549af2"><body>If true, all docblocks are interpreted, especially @package and the types of the properties/function parameters (if given).</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="keepDollar" xmi:id="4960021549bf1" visibility="private"  isStatic="true"><type xmi:idref="496002151caf2"/><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215822ef" annotatedElement="4960021549bf1"><body>If true, the symbol $ is kept along with the variable names</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="currentPackage" xmi:id="4960021549cdf" visibility="private"  isStatic="true"><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158232f" annotatedElement="4960021549cdf"><body>Current package index (which does not necessary match the last one put over $packages stack). This index refers to the array $model-&gt;packages</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="classDocComment" xmi:id="4960021549dda" visibility="private"  isStatic="true"><type xmi:idref="496002151cacf"/><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582373" annotatedElement="4960021549dda"><body>Current class doc-comment (also used with namespace doc-comment)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="classFeatures" xmi:id="4960021549ed5" visibility="private"  isStatic="true"><type xmi:idref="496002151cac2"/><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215823b9" annotatedElement="4960021549ed5"><body>Current class features (abstract, final)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="classElementFeatures" xmi:id="4960021549fc3" visibility="private"  isStatic="true"><type xmi:idref="496002151cac2"/><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215823fd" annotatedElement="4960021549fc3"><body>Current element (property or function) features (abstract, public, static...)</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="classElementDocComment" xmi:id="496002154a0b0" visibility="private"  isStatic="true"><type xmi:idref="496002151cacf"/><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582443" annotatedElement="496002154a0b0"><body>Current element doc-comment</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="currentQn" xmi:id="496002154a224" visibility="private"  isStatic="true"><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021582465" value="&#039;&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158248e" annotatedElement="496002154a224"><body>Current namespace, as defined by the PHP &quot;namespace&quot; instruction</body></ownedComment></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="aliases" xmi:id="496002154a36e" visibility="private"  isStatic="true"><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215824b4" value="array()" /><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215824de" annotatedElement="496002154a36e"><body>PHP namespace aliases (&quot;use &lt;value&gt; as &lt;key&gt;&quot;)</body></ownedComment></ownedAttribute><ownedOperation xmi:id="496002154a44f" 
            name="__construct" visibility="public" ><ownedParameter xmi:id="496002154a53c" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002154a56e" name="model" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedParameter xmi:id="496002154a5bf" name="docblocks" direction="in"><type xmi:idref="496002151caf2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002158254b" value="true" /></ownedParameter><ownedParameter xmi:id="496002154a608" name="dollar" direction="in"><type xmi:idref="496002151caf2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002158256f" value="true" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158259b" annotatedElement="496002154a44f"><body>Constructor</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002154a83c" 
            name="parse" visibility="public" ><ownedParameter xmi:id="496002154a9b3" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002154a9fb" name="fileBase" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002154aa63" name="filePath" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582622" annotatedElement="496002154a83c"><body>Parse a PHP file</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002154b2e4" 
            name="tClass" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002154b40b" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002154b453" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158268b" annotatedElement="496002154b2e4"><body>Template matching T_CLASS</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002154bade" 
            name="tInterface" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002154bc08" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002154bc51" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215826f2" annotatedElement="496002154bade"><body>Template matching T_INTERFACE</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002154c1a2" 
            name="tClassifierBody" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002154c302" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002154c34c" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedParameter xmi:id="496002154c3fb" name="class" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582775" annotatedElement="496002154c1a2"><body>Specific template for T_CLASS/T_INTERFACE Normally preceded by a tClass or tInterface</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002154d387" 
            name="tStringCommaList" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002154d52c" name="return" direction="return"><type xmi:idref="496002151cac2"/></ownedParameter><ownedParameter xmi:id="496002154d57e" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215827df" annotatedElement="496002154d387"><body>Specific template for matching a list of T_STRING, separated by a comma</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002154da51" 
            name="tFunction" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002154dbe3" name="return" direction="return"></ownedParameter><ownedParameter xmi:id="496002154dc2e" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedParameter xmi:id="496002154dca6" name="class" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582861" annotatedElement="496002154da51"><body>Specific template for T_FUNCTION</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002154e1ba" 
            name="tParametersList" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002154e347" name="return" direction="return"></ownedParameter><ownedParameter xmi:id="496002154e392" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedParameter xmi:id="496002154e403" name="o" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215828e4" annotatedElement="496002154e1ba"><body>Specific template for matching the parameters of a function</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002154ef40" 
            name="tScalar" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002154f10f" name="return" direction="return"><type xmi:idref="496002151cac2"/></ownedParameter><ownedParameter xmi:id="496002154f14a" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158294d" annotatedElement="496002154ef40"><body>Template for matching a scalar/static data (eg: $a = -14.5) Stopping characters: , ; )</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002154f703" 
            name="tNamespace" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002154f7d4" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002154f876" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215829b5" annotatedElement="496002154f703"><body>Template for matching T_NAMESPACE</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002154fdd6" 
            name="tString" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002154fef5" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002154ff29" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582a25" annotatedElement="496002154fdd6"><body>Specific template for matching the first T_STRING</body></ownedComment></ownedOperation><ownedOperation xmi:id="49600215500c0" 
            name="tQualifiedName" visibility="private"  isStatic="true"><ownedParameter xmi:id="49600215501ab" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="49600215501da" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582a8d" annotatedElement="49600215500c0"><body>Specific template for matching a qualified name, after a namespace instr</body></ownedComment></ownedOperation><ownedOperation xmi:id="49600215503f8" 
            name="tUse" visibility="private"  isStatic="true"><ownedParameter xmi:id="49600215504b4" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215504e2" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582af3" annotatedElement="49600215503f8"><body>Template for matching T_USE</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155072d" 
            name="tBody" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002155081a" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021550849" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582b5a" annotatedElement="496002155072d"><body>Base template It loops over PHP code, either in the global space, either inside functions, or class functions</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021550d8a" 
            name="tDocComment" visibility="private"  isStatic="true"><ownedParameter xmi:id="4960021550e5e" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021550e93" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582bc2" annotatedElement="4960021550d8a"><body>Template for matching doc-comment, before classes, interfaces or namespaces declarations</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155118a" 
            name="tNextDocComment" visibility="private"  isStatic="true"><ownedParameter xmi:id="4960021551295" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="49600215512c3" name="tokens" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582c2c" annotatedElement="496002155118a"><body>Specific template for T_DOC_COMMENT.
Returns at the first T_DOC_COMMENT found.
Used to get the file-level doc-comment</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021551511" 
            name="addPackage" visibility="private"  isStatic="true"><ownedParameter xmi:id="4960021551647" name="return" direction="return"></ownedParameter><ownedParameter xmi:id="4960021551676" name="name" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="49600215516db" name="nestingPkg" direction="in"><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021582c8f" value="null" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582d2e" annotatedElement="4960021551511"><body>Adds a package to the metamodel ($packages)</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021551a81" 
            name="addDeploymentPackage" visibility="private"  isStatic="true"><ownedParameter xmi:id="4960021551b87" name="return" direction="return"></ownedParameter><ownedParameter xmi:id="4960021551bb2" name="name" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021551c0b" name="nestingPkg" direction="in"><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021582dab" value="null" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582dd8" annotatedElement="4960021551a81"><body>Adds a deployment package to the metamodel</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021551fda" 
            name="getCurrentPackage" visibility="private" ><ownedParameter xmi:id="496002155210a" name="return" direction="return"><type xmi:idref="496002151cac2"/></ownedParameter><ownedParameter xmi:id="4960021552134" name="class" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582e43" annotatedElement="4960021551fda"><body>Return the index of the current package, depending on the @package in the last parsed docblock, and/or the potential presence of a package path in the class name.
Adds new packages to the $packages stack if necessary.
Normally used at each new class/interface insertion.</body></ownedComment></ownedOperation><ownedOperation xmi:id="49600215525d3" 
            name="addUse" visibility="private"  isStatic="true"><ownedParameter xmi:id="49600215526df" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002155271e" name="namespace" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155276f" name="alias" direction="in"><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021582ebc" value="&#039;&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582ee7" annotatedElement="49600215525d3"><body>Adds an alias to the list of namespace aliases</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021552971" 
            name="resolveQName" visibility="private"  isStatic="true"><ownedParameter xmi:id="4960021552ad2" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021552aff" name="path" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582f50" annotatedElement="4960021552971"><body>Resolve a class path into a qualified name - first by searching/replacing aliases (previously set by &quot;use ... as...&quot;) - then by prefixing with the current namespace, if the path is not absolute (and if it contains a separator)</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021552ede" 
            name="findPackageInDocblock" visibility="private"  isStatic="true"><ownedParameter xmi:id="4960021552ff2" name="return" direction="return"><type xmi:idref="496002151cadb"/></ownedParameter><ownedParameter xmi:id="496002155301e" name="text" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021553062" name="set" direction="inout"><type xmi:idref="496002151caa6"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021582fda" annotatedElement="4960021552ede"><body>Find a @package declaration in a (filtered) doc-comment</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155325c" 
            name="getDocblocksInDocComment" visibility="private"  isStatic="true"><ownedParameter xmi:id="4960021553345" name="return" direction="return"><type xmi:idref="496002151cac2"/></ownedParameter><ownedParameter xmi:id="496002155336f" name="text" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583042" annotatedElement="496002155325c"><body>Return the docblocks of a doc-comment</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155345d" 
            name="getDescriptionInDocComment" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002155355d" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021553587" name="text" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215830a9" annotatedElement="496002155345d"><body>Return the description part in a doc-comment It is found before the first docblock.</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155389d" 
            name="addDocumentation" visibility="private"  isStatic="true"><ownedParameter xmi:id="49600215539b8" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215539e2" name="desc" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021553a28" name="docs" direction="in"><type xmi:idref="496002151cac2"/></ownedParameter><ownedParameter xmi:id="4960021553a72" name="element" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583149" annotatedElement="496002155389d"><body>Adds all the docblocks and the main comment to the $tags sequence Note: the link between a stereotype and its element is bidirectional (element-&gt;description and stereotype-&gt;element)</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021553dfa" 
            name="removeDocCommentMarks" visibility="private"  isStatic="true"><ownedParameter xmi:id="4960021553ed8" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021553f02" name="text" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215831b8" annotatedElement="4960021553dfa"><body>Removes the leading/trailing comment marks</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021553fe5" 
            name="getUID" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002155411c" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583204" annotatedElement="4960021553fe5"><body>Returns a unique ID</body></ownedComment></ownedOperation><ownedOperation xmi:id="49600215541bf" 
            name="cleanVariable" visibility="private"  isStatic="true"><ownedParameter xmi:id="49600215542d7" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021554305" name="str" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158326c" annotatedElement="49600215541bf"><body>Filter a variable names (removes $ according to _keepDollar property)</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021554429" 
            name="setNestingPackage" visibility="private"  isStatic="true"><ownedParameter xmi:id="4960021554507" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002155453c" name="c" direction="inout"></ownedParameter><ownedParameter xmi:id="4960021554583" name="nestingPkg" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215832f0" annotatedElement="4960021554429"><body>Sets the nesting package to a class or an interface</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021554775" 
            name="setClassifierFeatures" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002155482e" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021554861" name="c" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583356" annotatedElement="4960021554775"><body>Sets the features (abstract, final) to a class/interface</body></ownedComment></ownedOperation><ownedOperation xmi:id="49600215549df" 
            name="setElementFeatures" visibility="private"  isStatic="true"><ownedParameter xmi:id="4960021554a94" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021554ac8" name="c" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215833bc" annotatedElement="49600215549df"><body>Set the features (static, private...) in a given class property/function</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021554d9a" 
            name="setTypeElement" visibility="private"  isStatic="true"><ownedParameter xmi:id="4960021554eea" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021554f21" name="p" direction="inout"></ownedParameter><ownedParameter xmi:id="4960021554f62" name="type" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021554fa2" name="token" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021554fdc" name="default" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021555018" name="varName" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021555059" name="dbParam" direction="in"><type xmi:idref="496002151cac2"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215834b3" annotatedElement="4960021554d9a"><body>Set the type of a given element (class property or function)</body></ownedComment></ownedOperation><ownedOperation xmi:id="49600215552bb" 
            name="getTypeFromToken" visibility="private"  isStatic="true"><ownedParameter xmi:id="49600215553b3" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="49600215553dd" name="token" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155541b" name="defaultValue" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583538" annotatedElement="49600215552bb"><body>Return a type (as a string) according to a given token/default value</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021555613" 
            name="getTypeFromDocblocks" visibility="private"  isStatic="true"><ownedParameter xmi:id="496002155574b" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021555780" name="dbParam" direction="in"><type xmi:idref="496002151cac2"/></ownedParameter><ownedParameter xmi:id="49600215557bc" name="variable" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215835be" annotatedElement="4960021555613"><body>Return a type (as a string), from the docblocks of a doc comment</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583600" annotatedElement="49600215494af"><body>The PHP parser.
It stores all the program elements of a PHP file in a PHP_UML_Metamodel_Superstructure object.

It relies the PHP instruction token_get_all().
Most navigabilities between associated elements are bidirectional (the packages know their owned elements, and the classes know their nesting package) In a first step, relations (extends, implements) use strings. It means that the namespace of a class is memorized through a string.
Once the parsing is done, the method finalize() must be called, so that all the named references be replaced by PHP references (&amp;$xxx).</body></ownedComment></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="496002155a6c5" name="XMI"><packagedElement xmi:type="uml:Class" name="PHP_UML_XMI_AbstractBuilder" xmi:id="496002155a6e7" visibility="package"
            isAbstract="false"><ownedAttribute xmi:type="uml:Property" name="EXPORTER_NAME" xmi:id="496002155a8ba" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021583705" value="&#039;PEAR\PHP_UML&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="PHP_FILE" xmi:id="496002155a954" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002158374a" value="&#039;PHP File&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="stereotypes" xmi:id="496002155aa1b" visibility="public"  isStatic="true"><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021583786" value="array(&#039;File&#039;,selfPHP_FILE)" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="extensions" xmi:id="496002155aaf4" visibility="public"  isStatic="true"><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215837c3" value="array(&#039;&#039;=&gt;&#039;File&#039;,&#039;php&#039;=&gt;selfPHP_FILE)" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="xmlEncoding" xmi:id="496002155ab6a" visibility="protected" ><type xmi:idref="496002151caa6"/></ownedAttribute><ownedOperation xmi:id="496002155abfe" 
            name="getUID" visibility="public"  isStatic="true"><ownedParameter xmi:id="496002155acf7" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155ad38" name="prefix" direction="in"><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021583873" value="null" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215838a2" annotatedElement="496002155abfe"><body>Generates an ID for an element. A partial identifier can be provided (used for classes and their idrefs)</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155ae4f" 
            name="getXmlHeader" visibility="public" ><ownedParameter xmi:id="496002155af0b" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215838f2" annotatedElement="496002155ae4f"><body>Gets an XML header for the XMI file</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155afa1" 
            name="factory" visibility="public"  isStatic="true"><ownedParameter xmi:id="496002155b0ad" name="return" direction="return"><type xmi:idref="496002155cf30"/></ownedParameter><ownedParameter xmi:id="496002155b0dd" name="version" direction="in"><type xmi:idref="496002151cb0a"/></ownedParameter><ownedParameter xmi:id="496002155b11d" name="xmlEncoding" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158397c" annotatedElement="496002155afa1"><body>Factory method. Retrieves a proper implementation class, matching the XMI version.</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155b2b5" 
            name="__construct" visibility="public" ><ownedParameter xmi:id="496002155b383" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002155b3b4" name="xmlEncoding" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215839e8" annotatedElement="496002155b2b5"><body>Constructor</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155b456" 
            name="getAllPackages" visibility="public" ><ownedParameter xmi:id="496002155b548" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155b57d" name="package" direction="in"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583a53" annotatedElement="496002155b456"><body>Get all packages, recursively, with all the objects they contain Initially called by PHP_UML-&gt;generateXMI() on the root package</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155b7e9" 
            name="getOwnedTypes" visibility="public" ><ownedParameter xmi:id="496002155b8cc" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155b8ff" name="package" direction="in"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583ac0" annotatedElement="496002155b7e9"><body>Get the different types owned by  package</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155bb73" 
            name="getAllComponents" visibility="public" ><ownedParameter xmi:id="496002155bc76" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155bca8" name="package" direction="in"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583b42" annotatedElement="496002155bb73"><body>Get all components, with its provided classes PHP_UML considers each logical package as a component, and each owned class as a provided class.</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583ba9" annotatedElement="496002155a6e7"><body>Abstract class to generate UML elements in XMI code.

To deal with the two different versions of XMI (1.4 and 2.1), you must use one of the two specialized versions:
PHP_UML_XMI_BuilderImpl1, or PHP_UML_XMI_BuilderImpl2</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Realization" xmi:id="49600215836dc" client="496002155a6e7" supplier="496002155cf30" realizingClassifier="496002155cf30"/><packagedElement xmi:type="uml:Interface"  name="PHP_UML_XMI_Builder" xmi:id="496002155cf30" visibility="package" isAbstract="true"><ownedOperation xmi:id="496002155d04b" 
            name="getXmiHeaderOpen" visibility="public" ><ownedParameter xmi:id="496002155d10b" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583c73" annotatedElement="496002155d04b"><body>Retrievesthe XMI header</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155d15b" 
            name="getXmiHeaderClose" visibility="public" ><ownedParameter xmi:id="496002155d209" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583ced" annotatedElement="496002155d15b"><body>Closing tag for the XMI header</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155d250" 
            name="getModelOpen" visibility="public" ><ownedParameter xmi:id="496002155d323" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155d360" name="model" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583d92" annotatedElement="496002155d250"><body>Retrieves the opening tag for a model</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155d3c5" 
            name="getModelClose" visibility="public" ><ownedParameter xmi:id="496002155d47e" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583e21" annotatedElement="496002155d3c5"><body>Retrieves the closing tag of a model</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155d4c6" 
            name="getPackageOpen" visibility="public" ><ownedParameter xmi:id="496002155d59d" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155d5d1" name="package" direction="in"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583eef" annotatedElement="496002155d4c6"><body>Retrieves the opening tag for a package</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155d628" 
            name="getPackageClose" visibility="public" ><ownedParameter xmi:id="496002155d6d8" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583f42" annotatedElement="496002155d628"><body>Retrieves the closing tag of a package</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155d71f" 
            name="getNamespaceOpen" visibility="public" ><ownedParameter xmi:id="496002155d7d0" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583f8f" annotatedElement="496002155d71f"><body>Retrieves the opening namespace tag (XMI 1 only)</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155d817" 
            name="getNamespaceClose" visibility="public" ><ownedParameter xmi:id="496002155d8e0" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021583fdf" annotatedElement="496002155d817"><body>Retrieves the closing namespace tag (XMI 1 only)</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155da60" 
            name="getSubsystemOpen" visibility="public" ><ownedParameter xmi:id="496002155db93" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155dbd2" name="package" direction="in"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158404a" annotatedElement="496002155da60"><body>Retrieves the opening tag for a sub-system (XMI 1), or a component (XMI 2)</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155dc36" 
            name="getSubsystemClose" visibility="public" ><ownedParameter xmi:id="496002155dcf1" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021584098" annotatedElement="496002155dc36"><body>Retrieves the closing tag for a subsystem / component</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155dd39" 
            name="getStereotypes" visibility="public" ><ownedParameter xmi:id="496002155ddee" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215840e8" annotatedElement="496002155dd39"><body>Retrieves the necessary stereotypes</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155de38" 
            name="getStereotypeInstance" visibility="public" ><ownedParameter xmi:id="496002155dee4" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002155df76" name="s" direction="in"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021584153" annotatedElement="496002155de38"><body>Retrieves the XMI code for a given stereotype</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155dff3" 
            name="getDatatype" visibility="public" ><ownedParameter xmi:id="496002155e0e0" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155e116" name="type" direction="in"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215841bf" annotatedElement="496002155dff3"><body>Retrieves the XMI declarations of the main PHP types</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155e16e" 
            name="getClass" visibility="public" ><ownedParameter xmi:id="496002155e241" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155e275" name="class" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158422b" annotatedElement="496002155e16e"><body>Retrieves the XMI code for a class</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155e2cd" 
            name="getInterface" visibility="public" ><ownedParameter xmi:id="496002155e39f" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155e3d3" name="interface" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215842a4" annotatedElement="496002155e2cd"><body>Retrieves the XMI code for an interface</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155e428" 
            name="getOperation" visibility="public" ><ownedParameter xmi:id="496002155e4f9" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155e52d" name="operation" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021584311" annotatedElement="496002155e428"><body>Retrieves the XMI code for an operation</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155e583" 
            name="getParameter" visibility="public" ><ownedParameter xmi:id="496002155e657" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155e68b" name="parameter" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215843f5" annotatedElement="496002155e583"><body>Retrieves the XMI code for the paramater of an operation</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155e6e0" 
            name="getArtifact" visibility="public" ><ownedParameter xmi:id="496002155e7df" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155e80f" name="file" direction="in"></ownedParameter><ownedParameter xmi:id="496002155e87e" name="mf" direction="inout"><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002158445b" value="array()" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021584490" annotatedElement="496002155e6e0"><body>Retrieves the XMI code for an artifact</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155e8d3" 
            name="getComponentOpen" visibility="public" ><ownedParameter xmi:id="496002155e9dc" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155ea0b" name="package" direction="in"></ownedParameter><ownedParameter xmi:id="496002155ea4c" name="provided" direction="in"><type xmi:idref="496002151cac2"/></ownedParameter><ownedParameter xmi:id="496002155ea9d" name="required" direction="in"><type xmi:idref="496002151cac2"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158453d" annotatedElement="496002155e8d3"><body>Retrieves the XMI code for a component</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155eaf1" 
            name="getComponentClose" visibility="public" ><ownedParameter xmi:id="496002155eba3" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021584590" annotatedElement="496002155eaf1"><body>Retieves the closing tag for a component</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155ebea" 
            name="getParameterType" visibility="public" ><ownedParameter xmi:id="496002155eccc" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155ed01" name="parameter" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215845fb" annotatedElement="496002155ebea"><body>Retrieves the XMI code for a typed element (datatype, class, interface).
Required by getParameter(). Adds the default value (if any)</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155ed54" 
            name="getRealizations" visibility="public" ><ownedParameter xmi:id="496002155ee38" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155ee6f" name="client" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021584666" annotatedElement="496002155ed54"><body>Retrieves the XMI code for all the realization (= interface implementations) of a given element</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155eec6" 
            name="getGeneralizations" visibility="public" ><ownedParameter xmi:id="496002155ef9d" name="return" direction="return"><type xmi:idref="496002151caa6"/></ownedParameter><ownedParameter xmi:id="496002155efd6" name="client" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215846d8" annotatedElement="496002155eec6"><body>Retrieves the XMI code for all the inherited classes of a given element</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155f02f" 
            name="getComment" visibility="public" ><ownedParameter xmi:id="496002155f137" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155f16e" name="s" direction="inout"></ownedParameter><ownedParameter xmi:id="496002155f1b6" name="annotatedElement" direction="in"><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002158473c" value="&#039;&#039;" /></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021584769" annotatedElement="496002155f02f"><body>Adds a description/comment to a model element The description is given through a stereotype instance</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155f20b" 
            name="getProfile" visibility="public" ><ownedParameter xmi:id="496002155f2c4" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215847b6" annotatedElement="496002155f20b"><body>Retrieves the XMI code for a UML2 profile.</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002155f316" 
            name="getMetadata" visibility="public" ><ownedParameter xmi:id="496002155f3f7" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002155f428" name="tag" direction="in"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158481e" annotatedElement="496002155f316"><body>Retrieves the metadata related to a given tag</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021584853" annotatedElement="496002155cf30"><body>Interface for the XMI generation</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_XMI_BuilderImpl1" xmi:id="4960021560f82" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="4960021584893" general="496002155a6e7"/> <ownedAttribute xmi:type="uml:Property" name="XMI_VERSION" xmi:id="496002156115d" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215848c3" value="&#039;1.2&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="UML_VERSION" xmi:id="49600215611fa" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021584906" value="&#039;1.4&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="DEFAULT_CLASSIFIER_ATT" xmi:id="4960021561281" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021584943" value="&#039; visibility=&quot;public&quot; isAbstract=&quot;false&quot; 
        isSpecification=&quot;false&quot; isRoot=&quot;false&quot; isLeaf=&quot;false&quot; &#039;" /></ownedAttribute><ownedOperation xmi:id="49600215612f3" 
            name="getXmiHeaderOpen" visibility="public" ><ownedParameter xmi:id="4960021561345" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021561410" 
            name="getXmiHeaderClose" visibility="public" ><ownedParameter xmi:id="496002156145f" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="49600215614ce" 
            name="getModelOpen" visibility="public" ><ownedParameter xmi:id="496002156151d" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021561553" name="model" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021561732" 
            name="getStereotypes" visibility="public" ><ownedParameter xmi:id="49600215617d5" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021561a14" 
            name="getStereotypeInstance" visibility="public" ><ownedParameter xmi:id="4960021561a75" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021561aae" name="s" direction="in"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021561b2c" 
            name="getMetadata" visibility="public" ><ownedParameter xmi:id="4960021561b7c" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021561baa" name="tag" direction="in"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021561c68" 
            name="getModelClose" visibility="public" ><ownedParameter xmi:id="4960021561cb7" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021561d1d" 
            name="getPackageOpen" visibility="public" ><ownedParameter xmi:id="4960021561d6b" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021561d9d" name="package" direction="in"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021561e43" 
            name="getNamespaceOpen" visibility="public" ><ownedParameter xmi:id="4960021561e95" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021561eff" 
            name="getPackageClose" visibility="public" ><ownedParameter xmi:id="4960021561f4e" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021561fb6" 
            name="getNamespaceClose" visibility="public" ><ownedParameter xmi:id="4960021562005" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="496002156206c" 
            name="getSubsystemOpen" visibility="public" ><ownedParameter xmi:id="49600215620ba" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215620e7" name="package" direction="in"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021562191" 
            name="getSubsystemClose" visibility="public" ><ownedParameter xmi:id="49600215621de" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021562246" 
            name="getDatatype" visibility="public" ><ownedParameter xmi:id="4960021562294" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215622c1" name="type" direction="in"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021562404" 
            name="getClass" visibility="public" ><ownedParameter xmi:id="496002156245e" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021562496" name="class" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="49600215627d6" 
            name="getInterface" visibility="public" ><ownedParameter xmi:id="4960021562827" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156285a" name="interface" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021562ac5" 
            name="getGeneralizations" visibility="public" ><ownedParameter xmi:id="4960021562b15" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021562b47" name="client" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021562d7d" 
            name="getRealizations" visibility="public" ><ownedParameter xmi:id="4960021562dce" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021562e01" name="client" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021563019" 
            name="getProperty" visibility="public" ><ownedParameter xmi:id="4960021563069" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156309b" name="property" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021563320" 
            name="getOperation" visibility="public" ><ownedParameter xmi:id="4960021563370" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215633a5" name="operation" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="496002156364e" 
            name="getParameter" visibility="public" ><ownedParameter xmi:id="49600215636a0" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215636d4" name="parameter" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="49600215637dc" 
            name="getParameterType" visibility="public" ><ownedParameter xmi:id="496002156382b" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156385d" name="parameter" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021563ab1" 
            name="getArtifact" visibility="public" ><ownedParameter xmi:id="4960021563b08" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021563b39" name="file" direction="in"></ownedParameter><ownedParameter xmi:id="4960021563ba6" name="mf" direction="inout"><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215850ba" value="array()" /></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021563ce2" 
            name="getComponentOpen" visibility="public" ><ownedParameter xmi:id="4960021563d32" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021563d61" name="package" direction="in"></ownedParameter><ownedParameter xmi:id="4960021563da1" name="provided" direction="in"><type xmi:idref="496002151cac2"/></ownedParameter><ownedParameter xmi:id="4960021563dde" name="required" direction="in"><type xmi:idref="496002151cac2"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021563e63" 
            name="getComponentClose" visibility="public" ><ownedParameter xmi:id="4960021563eb1" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021563f2b" 
            name="getComment" visibility="public" ><ownedParameter xmi:id="4960021563f78" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021563faa" name="s" direction="inout"></ownedParameter><ownedParameter xmi:id="4960021563fed" name="annotatedElement" direction="in"><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002158520c" value="&#039;&#039;" /></ownedParameter></ownedOperation><ownedOperation xmi:id="496002156411c" 
            name="getTaggedValue" visibility="public" ><ownedParameter xmi:id="496002156416a" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021564191" name="value" direction="in"><type xmi:idref="496002151caa6"/></ownedParameter><ownedParameter xmi:id="49600215641cc" name="tag" direction="in"><type xmi:idref="496002151caa6"/></ownedParameter></ownedOperation><ownedOperation xmi:id="49600215642eb" 
            name="getTagDefinition" visibility="public" ><ownedParameter xmi:id="4960021564339" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021564360" name="name" direction="in"><type xmi:idref="496002151caa6"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021564480" 
            name="getProfile" visibility="public" ><ownedParameter xmi:id="49600215644d0" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="496002156454d" 
            name="getStructuralFeatureType" visibility="protected"  isStatic="true"><ownedParameter xmi:id="496002156463f" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="4960021564674" name="element" direction="inout"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="496002158539b" annotatedElement="496002156454d"><body>Get the structural type of an element (XMI 1.x)</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="49600215853c7" annotatedElement="4960021560f82"><body>Implementation class to create XMI in version 1 
See the interface PHP_UML_XMI_Builder for the comments</body></ownedComment></packagedElement><packagedElement xmi:type="uml:Class" name="PHP_UML_XMI_BuilderImpl2" xmi:id="4960021566b35" visibility="package"
            isAbstract="false"><generalization xmi:type="uml:Generalization" xmi:id="4960021585422" general="496002155a6e7"/> <ownedAttribute xmi:type="uml:Property" name="XMI_VERSION" xmi:id="4960021566d0a" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002158544d" value="&#039;2.1&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="UML_VERSION" xmi:id="4960021566da2" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021585490" value="&#039;2.1.2&#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="DEFAULT_CLASSIFIER_ATT" xmi:id="4960021566e29" visibility="public"  isStatic="true" isReadOnly="true" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="49600215854cd" value="&#039; visibility=&quot;public&quot; isAbstract=&quot;false&quot; &#039;" /></ownedAttribute><ownedAttribute xmi:type="uml:Property" name="profile" xmi:id="4960021566ebf" visibility="public" ><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="496002158550e" value="&#039;&#039;" /><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021585539" annotatedElement="4960021566ebf"><body>PHP_UML UML Profile (TODO)</body></ownedComment></ownedAttribute><ownedOperation xmi:id="4960021566f89" 
            name="getXmiHeaderOpen" visibility="public" ><ownedParameter xmi:id="4960021566fe1" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="49600215670ed" 
            name="getModelOpen" visibility="public" ><ownedParameter xmi:id="4960021567142" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156717e" name="model" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021567250" 
            name="getModelClose" visibility="public" ><ownedParameter xmi:id="49600215672b1" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021567320" 
            name="getXmiHeaderClose" visibility="public" ><ownedParameter xmi:id="4960021567370" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="49600215673e0" 
            name="getPackageOpen" visibility="public" ><ownedParameter xmi:id="496002156742d" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021567460" name="package" direction="in"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021567513" 
            name="getPackageClose" visibility="public" ><ownedParameter xmi:id="4960021567563" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="49600215675ce" 
            name="getNamespaceOpen" visibility="public" ><ownedParameter xmi:id="496002156761c" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021567685" 
            name="getNamespaceClose" visibility="public" ><ownedParameter xmi:id="49600215676d4" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="496002156773d" 
            name="getDatatype" visibility="public" ><ownedParameter xmi:id="496002156778b" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215677ba" name="type" direction="in"></ownedParameter></ownedOperation><ownedOperation xmi:id="496002156787e" 
            name="getSubsystemOpen" visibility="public" ><ownedParameter xmi:id="49600215678cc" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215678f8" name="package" direction="in"></ownedParameter></ownedOperation><ownedOperation xmi:id="49600215679bf" 
            name="getSubsystemClose" visibility="public" ><ownedParameter xmi:id="4960021567a0e" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021567a78" 
            name="getClass" visibility="public" ><ownedParameter xmi:id="4960021567ac5" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021567af8" name="class" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021567e5a" 
            name="getInterface" visibility="public" ><ownedParameter xmi:id="4960021567ecb" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021567f07" name="interface" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021568120" 
            name="getRealizations" visibility="public" ><ownedParameter xmi:id="4960021568174" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215681a9" name="client" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="496002156837f" 
            name="getGeneralizations" visibility="public" ><ownedParameter xmi:id="49600215683d0" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021568402" name="client" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021568585" 
            name="getProperty" visibility="public" ><ownedParameter xmi:id="49600215685d4" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021568606" name="property" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021568861" 
            name="getOperation" visibility="public" ><ownedParameter xmi:id="49600215688b2" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="49600215688e6" name="operation" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021568b7c" 
            name="getParameter" visibility="public" ><ownedParameter xmi:id="4960021568bce" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021568c01" name="parameter" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021568cfc" 
            name="getParameterType" visibility="public" ><ownedParameter xmi:id="4960021568d4c" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021568d7f" name="parameter" direction="inout"></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021568f4f" 
            name="getArtifact" visibility="public" ><ownedParameter xmi:id="4960021568f9e" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021568fcd" name="file" direction="in"></ownedParameter><ownedParameter xmi:id="49600215690e9" name="mf" direction="inout"><type xmi:idref="496002151cac2"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021585bd4" value="array()" /></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021569377" 
            name="getComponentOpen" visibility="public" ><ownedParameter xmi:id="49600215693df" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021569411" name="package" direction="in"></ownedParameter><ownedParameter xmi:id="4960021569455" name="provided" direction="in"><type xmi:idref="496002151cac2"/></ownedParameter><ownedParameter xmi:id="49600215694fb" name="required" direction="in"><type xmi:idref="496002151cac2"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021569874" 
            name="getComponentClose" visibility="public" ><ownedParameter xmi:id="49600215698d5" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021569953" 
            name="getProfile" visibility="public" ><ownedParameter xmi:id="4960021569a3f" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021585d0d" annotatedElement="4960021569953"><body>Formates a Profile adapted to PHP_UML.

TODO. Experimental.</body></ownedComment></ownedOperation><ownedOperation xmi:id="4960021569b04" 
            name="getComment" visibility="public" ><ownedParameter xmi:id="4960021569b55" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="4960021569b8f" name="s" direction="inout"></ownedParameter><ownedParameter xmi:id="4960021569bd6" name="annotatedElement" direction="in"><type xmi:idref="496002151cacf"/><defaultValue xmi:type="uml:LiteralString" xmi:id="4960021585d73" value="&#039;&#039;" /></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021569d38" 
            name="getStereotypes" visibility="public" ><ownedParameter xmi:id="4960021569d89" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter></ownedOperation><ownedOperation xmi:id="4960021569e03" 
            name="getStereotypeInstance" visibility="public" ><ownedParameter xmi:id="4960021569eff" name="return" direction="return"></ownedParameter><ownedParameter xmi:id="4960021569f30" name="s" direction="in"></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021585e35" annotatedElement="4960021569e03"><body>Gets all the elements contained in a stereotype Note: the property &quot;documentation&quot; is not discarded (we will have it as an &quot;ownedComent&quot; tag, instead; see getComment())</body></ownedComment></ownedOperation><ownedOperation xmi:id="496002156a16a" 
            name="getMetadata" visibility="public" ><ownedParameter xmi:id="496002156a1bc" name="return" direction="return"><type xmi:idref="496002151cb16"/></ownedParameter><ownedParameter xmi:id="496002156a1eb" name="tag" direction="in"></ownedParameter></ownedOperation><ownedOperation xmi:id="496002156a2cd" 
            name="getManifestation" visibility="public" ><ownedParameter xmi:id="496002156a3f2" name="return" direction="return"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002156a41d" name="client" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002156a463" name="supplier" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedParameter xmi:id="496002156a49d" name="name" direction="in"><type xmi:idref="496002151cacf"/></ownedParameter><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021585f35" annotatedElement="496002156a2cd"><body>Generates a manifestation element (= the link between a class and the artifact where the class is defined)</body></ownedComment></ownedOperation><ownedComment xmi:type="uml:Comment"
                xmi:id="4960021585f6a" annotatedElement="4960021566b35"><body>Implementation class to create XMI in version 2 
See the interface PHP_UML_XMI_Builder for the comments.</body></ownedComment></packagedElement></packagedElement></packagedElement>
            <packagedElement xmi:type="uml:Component" xmi:id="4960021586185" name="PHP_UML"  visibility="public" isAbstract="false"  ><provided xmi:id="eba6b7687811c81ba9e53c2451e2524c" xmi:idref="496002151dbca" name="Iterator"/><provided xmi:id="3e3b76c65117aa3ec3681c3fe921767c" xmi:idref="496002151dbe5" name="Countable"/><provided xmi:id="ee6e76b5b0ca6891a9612caa85e4b120" xmi:idref="496002151eb77" name="Exception"/>
            <packagedElement xmi:type="uml:Component" xmi:id="4960021586218" name="PHP_UML"  visibility="public" isAbstract="false"  ><provided xmi:id="4555a096371accfc13f6acde0f4ae5b3" xmi:idref="4960021525e2d" name="PHP_UML_Exception"/><provided xmi:id="defc76650dc0ded1517a854a956b8540" xmi:idref="4960021528d09" name="PHP_UML_FilePatternFilterIterator"/><provided xmi:id="29e49ef59e466de7da35d3531e72e35d" xmi:idref="4960021557c8b" name="PHP_UML_SimpleUID"/><provided xmi:id="e22527fb4f71264df415292c78032a41" xmi:idref="4960021558d3b" name="PHP_UML_Warning"/><provided xmi:id="5173460f57828249942ca3c538bf73e6" xmi:idref="496002156c4ee" name="PHP_UML"/>
            <packagedElement xmi:type="uml:Component" xmi:id="4960021586277" name="Metamodel"  visibility="public" isAbstract="false"  ><provided xmi:id="d6448bd1272397819743b67ca7a916ac" xmi:idref="496002152e8d1" name="PHP_UML_Metamodel_Class"/><provided xmi:id="2eef6fe4a5d4e9b21cb587e2860547c0" xmi:idref="496002152f771" name="PHP_UML_Metamodel_Enumeration"/><provided xmi:id="1bfd7d269db8f6dc6404dfde71eab429" xmi:idref="49600215306d9" name="PHP_UML_Metamodel_File"/><provided xmi:id="9a384ddc8738e38abd18939a2e5719f3" xmi:idref="4960021531374" name="PHP_UML_Metamodel_Interface"/><provided xmi:id="ad6f7be39a55da37298cca1bcddae674" xmi:idref="4960021532279" name="PHP_UML_Metamodel_NamedElement"/><provided xmi:id="6005673e69338302f1d75e4d14dfa633" xmi:idref="49600215330e2" name="PHP_UML_Metamodel_Operation"/><provided xmi:id="1bfcd4edb1781a0a7023b3b239863826" xmi:idref="496002153424d" name="PHP_UML_Metamodel_Package"/><provided xmi:id="2c501b5a233c662a318a776bdef4b647" xmi:idref="49600215350f2" name="PHP_UML_Metamodel_Parameter"/><provided xmi:id="45557a1b0a6cf1e20a8ddc79172bcebe" xmi:idref="4960021535eeb" name="PHP_UML_Metamodel_Property"/><provided xmi:id="4ad64d1a3000837dc049a34c93300057" xmi:idref="4960021536f1d" name="PHP_UML_Metamodel_Stereotype"/><provided xmi:id="809a10676049cdbf98cb2153fbb89a9c" xmi:idref="4960021538b28" name="PHP_UML_Metamodel_Superstructure"/><provided xmi:id="efab0f3b924b9ca17e3933424fe65530" xmi:idref="496002153d8c9" name="PHP_UML_Metamodel_Tag"/><provided xmi:id="e37f598539c2b276baed308205260df2" xmi:idref="496002153e56a" name="PHP_UML_Metamodel_Type"/><provided xmi:id="740792c007e143f3d2d674d24dd25096" xmi:idref="496002153f292" name="PHP_UML_Metamodel_TypedElement"/></packagedElement>
            <packagedElement xmi:type="uml:Component" xmi:id="496002158633b" name="Output"  visibility="public" isAbstract="false"  ><provided xmi:id="5f0f64aeb9df2a4091459a2d8909c351" xmi:idref="4960021540b16" name="PHP_UML_Output_Exporter"/></packagedElement>
            <packagedElement xmi:type="uml:Component" xmi:id="4960021586377" name="PHP"  visibility="public" isAbstract="false"  ><provided xmi:id="0e1f3888d3b9f892f08464a730d326e1" xmi:idref="49600215494af" name="PHP_UML_PHP_Parser"/></packagedElement>
            <packagedElement xmi:type="uml:Component" xmi:id="49600215863b2" name="XMI"  visibility="public" isAbstract="false"  ><provided xmi:id="4d2737321075c3be0f3a83f2dc450525" xmi:idref="496002155a6e7" name="PHP_UML_XMI_AbstractBuilder"/><provided xmi:id="718d8912def4b356c9c11e0da63c8566" xmi:idref="496002155cf30" name="PHP_UML_XMI_Builder"/><provided xmi:id="e9c38c5fb4c34520230e0edac24fc197" xmi:idref="4960021560f82" name="PHP_UML_XMI_BuilderImpl1"/><provided xmi:id="8024360bafa661d6251fb06a15e0dad4" xmi:idref="4960021566b35" name="PHP_UML_XMI_BuilderImpl2"/></packagedElement></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="496002151eb9c" name="Deployment View">
            <packagedElement xmi:type="uml:Artifact" xmi:id="496002156b37c" name="UML.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="4960021586474" client="496002156b37c" supplier="496002156c4ee" utilizedElement="496002156c4ee" name="source"/></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="4960021525a04" name="UML">
            <packagedElement xmi:type="uml:Artifact" xmi:id="49600215259a4" name="Exception.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="49600215864bc" client="49600215259a4" supplier="4960021525e2d" utilizedElement="4960021525e2d" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="496002152874b" name="FilePatternFilterIterator.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="49600215864e8" client="496002152874b" supplier="4960021528d09" utilizedElement="4960021528d09" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="496002155780f" name="SimpleUID.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="4960021586510" client="496002155780f" supplier="4960021557c8b" utilizedElement="4960021557c8b" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="4960021558945" name="Warning.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="4960021586538" client="4960021558945" supplier="4960021558d3b" utilizedElement="4960021558d3b" name="source"/></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="496002152e535" name="Metamodel">
            <packagedElement xmi:type="uml:Artifact" xmi:id="496002152e4b2" name="Class.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="496002158658c" client="496002152e4b2" supplier="496002152e8d1" utilizedElement="496002152e8d1" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="496002152f301" name="Enumeration.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="49600215865b5" client="496002152f301" supplier="496002152f771" utilizedElement="496002152f771" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="4960021530315" name="File.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="49600215865dd" client="4960021530315" supplier="49600215306d9" utilizedElement="49600215306d9" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="4960021530f00" name="Interface.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="4960021586605" client="4960021530f00" supplier="4960021531374" utilizedElement="4960021531374" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="4960021531d99" name="NamedElement.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="496002158662d" client="4960021531d99" supplier="4960021532279" utilizedElement="4960021532279" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="4960021532c9e" name="Operation.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="4960021586657" client="4960021532c9e" supplier="49600215330e2" utilizedElement="49600215330e2" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="4960021533dde" name="Package.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="496002158667f" client="4960021533dde" supplier="496002153424d" utilizedElement="496002153424d" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="4960021534c29" name="Parameter.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="49600215866a7" client="4960021534c29" supplier="49600215350f2" utilizedElement="49600215350f2" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="4960021535a9d" name="Property.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="49600215866d0" client="4960021535a9d" supplier="4960021535eeb" utilizedElement="4960021535eeb" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="4960021536ace" name="Stereotype.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="49600215866f8" client="4960021536ace" supplier="4960021536f1d" utilizedElement="4960021536f1d" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="4960021537920" name="Superstructure.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="4960021586720" client="4960021537920" supplier="4960021538b28" utilizedElement="4960021538b28" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="496002153d436" name="Tag.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="496002158674a" client="496002153d436" supplier="496002153d8c9" utilizedElement="496002153d8c9" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="496002153e16b" name="Type.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="4960021586772" client="496002153e16b" supplier="496002153e56a" utilizedElement="496002153e56a" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="496002153ed9e" name="TypedElement.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="496002158679a" client="496002153ed9e" supplier="496002153f292" utilizedElement="496002153f292" name="source"/></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="496002154014f" name="Output">
            <packagedElement xmi:type="uml:Artifact" xmi:id="49600215400cd" name="Exporter.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="49600215867f0" client="49600215400cd" supplier="4960021540b16" utilizedElement="4960021540b16" name="source"/></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="4960021546231" name="PHP">
            <packagedElement xmi:type="uml:Artifact" xmi:id="496002154618f" name="Parser.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="4960021586839" client="496002154618f" supplier="49600215494af" utilizedElement="49600215494af" name="source"/></packagedElement></packagedElement><packagedElement xmi:type="uml:Package" xmi:id="4960021559e5e" name="XMI">
            <packagedElement xmi:type="uml:Artifact" xmi:id="4960021559da0" name="AbstractBuilder.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="4960021586882" client="4960021559da0" supplier="496002155a6e7" utilizedElement="496002155a6e7" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="496002155c7ca" name="Builder.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="49600215868aa" client="496002155c7ca" supplier="496002155cf30" utilizedElement="496002155cf30" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="496002155fc15" name="BuilderImpl1.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="49600215868d2" client="496002155fc15" supplier="4960021560f82" utilizedElement="4960021560f82" name="source"/></packagedElement>
            <packagedElement xmi:type="uml:Artifact" xmi:id="49600215659de" name="BuilderImpl2.php"  stereotype="cc99fbb28ce726caba6fee91461f54db"  visibility="public" isAbstract="false"  ><manifestation xmi:type="uml:Manifestation" xmi:id="49600215868fb" client="49600215659de" supplier="4960021566b35" utilizedElement="4960021566b35" name="source"/></packagedElement></packagedElement></packagedElement></packagedElement></uml:Model><php:docblock base_Element="4960021525e2d"><category>PHP</category><package>PHP_UML</package><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><link>http://pear.php.net/package/PHP_UML</link></php:docblock><php:docblock base_Element="4960021528d09"><category>PHP</category><package>PHP_UML</package><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><link>http://pear.php.net/package/PHP_UML</link></php:docblock><php:docblock base_Element="496002152be9c"><param>Iterator $iterator Iterator object</param><param>array $ignored Ignore pattern(s)</param><param>array $allowed Match pattern(s)</param></php:docblock><php:docblock base_Element="496002152d33e"><return>boolean True if the element is acceptable</return></php:docblock><php:docblock base_Element="496002152d81d"><return>PHP_UML_FilterIterator</return></php:docblock><php:docblock base_Element="496002152f931"><var>array</var></php:docblock><php:docblock base_Element="496002152fbc4"><var>array</var></php:docblock><php:docblock base_Element="4960021530803"><var>array</var></php:docblock><php:docblock base_Element="4960021531374"><category>PHP</category><package>PHP_UML</package><subpackage>Metamodel</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><version>SVN: $Revision: 73 $</version><link>http://pear.php.net/package/PHP_UML</link><link>http://www.omg.org/mof/</link><since>$Date: 2008-12-17 01:30:18 +0100 (mer., 17 déc. 2008) $</since></php:docblock><php:docblock base_Element="4960021532279"><category>PHP</category><package>PHP_UML</package><subpackage>Metamodel</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license></php:docblock><php:docblock base_Element="49600215323e3"><var>string</var></php:docblock><php:docblock base_Element="49600215324db"><var>string</var></php:docblock><php:docblock base_Element="49600215325bb"><var>PHP_UML_Metamodel_Stereotype</var></php:docblock><php:docblock base_Element="49600215330e2"><category>PHP</category><package>PHP_UML</package><subpackage>Metamodel</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><version>SVN: $Revision: 73 $</version><link>http://pear.php.net/package/PHP_UML</link><link>http://www.omg.org/mof/</link><since>$Date: 2008-12-17 01:30:18 +0100 (mer., 17 déc. 2008) $</since></php:docblock><php:docblock base_Element="496002153424d"><category>PHP</category><package>PHP_UML</package><subpackage>Metamodel</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><version>SVN: $Revision: 73 $</version><link>http://pear.php.net/package/PHP_UML</link><link>http://www.omg.org/mof/</link><since>$Date: 2008-12-17 01:30:18 +0100 (mer., 17 déc. 2008) $</since></php:docblock><php:docblock base_Element="49600215350f2"><category>PHP</category><package>PHP_UML</package><subpackage>Metamodel</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><version>SVN: $Revision: 73 $</version><link>http://pear.php.net/package/PHP_UML</link><link>http://www.omg.org/mof/</link><since>$Date: 2008-12-17 01:30:18 +0100 (mer., 17 déc. 2008) $</since></php:docblock><php:docblock base_Element="4960021535eeb"><category>PHP</category><package>PHP_UML</package><subpackage>Metamodel</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><version>SVN: $Revision: 73 $</version><link>http://pear.php.net/package/PHP_UML</link><link>http://www.omg.org/mof/</link><since>$Date: 2008-12-17 01:30:18 +0100 (mer., 17 déc. 2008) $</since></php:docblock><php:docblock base_Element="4960021536f1d"><category>PHP</category><package>PHP_UML</package><subpackage>Metamodel</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license></php:docblock><php:docblock base_Element="4960021538b28"><category>PHP</category><package>PHP_UML</package><subpackage>Metamodel</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license></php:docblock><php:docblock base_Element="4960021538d5c"><var>PHP_UML_Metamodel_Package</var></php:docblock><php:docblock base_Element="4960021538e57"><var>PHP_UML_Metamodel_Package</var></php:docblock><php:docblock base_Element="4960021538f71"><var>array</var></php:docblock><php:docblock base_Element="496002153915b"><param>PHP_UML_Metamodel_Package &amp;$package Base package</param></php:docblock><php:docblock base_Element="496002153962e"><param>PHP_UML_Metamodel_Package &amp;$ns Package to resolve the elements of</param><param>array &amp;$_oDef Default packages to look for</param></php:docblock><php:docblock base_Element="4960021539e10"><param>PHP_UML_Metamodel_Package &amp;$ns A package element</param><param>string $value A name</param><return>mixed Either FALSE if not found, or the element</return></php:docblock><php:docblock base_Element="496002153a0e1"><param>PHP_UML_Metamodel_NamedElement &amp;$element Related object</param><param>string $profileName Profile name</param><param>string $stereotypeName Stereotype name</param><return>PHP_UML_Metamodel_Stereotype</return></php:docblock><php:docblock base_Element="496002153a438"><param>PHP_UML_Metamodel_NamedElement &amp;$element The element</param><param>string $profileName The profile name</param><param>string $stereotypeName The stereotype name</param><return>PHP_UML_Metamodel_Stereotype</return></php:docblock><php:docblock base_Element="496002153a765"><param>PHP_UML_Metamodel_Stereotype $s The stereotype</param><param>string $tagName The tag name (&quot;description&quot;, e.g)</param><return>PHP_UML_Metamodel_Tag</return></php:docblock><php:docblock base_Element="496002153aa62"><param>PHP_UML_Metamodel_Package &amp;$np A package element (context)</param><param>string $value A package name (to find)</param><return>mixed Either FALSE if not found, or the position in the stack</return></php:docblock><php:docblock base_Element="496002153ad25"><param>PHP_UML_Metamodel_Package &amp;$pkg The nesting package</param><param>string &amp;$element The element to resolve, provided as a name</param><param>array &amp;$pkgDef The default packages</param><param>PHP_UML_Metamodel_Type &amp;$context The context (the nesting class/interface, which</param></php:docblock><php:docblock base_Element="496002153b6cf"><param>string $element Element</param><param>string $file File context</param></php:docblock><php:docblock base_Element="496002153b90f"><param>string $path A path to split</param><param>bool $modeFirst If true, splits into 1st and the rest</param><param>string $alt Alternate separator (eg, the directory separator)</param><return>array Results array</return></php:docblock><php:docblock base_Element="496002153c0f5"><param>string $path The path to find</param><return>PHP_UML_Metamodel_Package The package to find. Null if not found.</return></php:docblock><php:docblock base_Element="496002153c45c"><param>array $defPkg Array of PHP_UML_Metamodel_Package where to look into,</param></php:docblock><php:docblock base_Element="496002153d8c9"><category>PHP</category><package>PHP_UML</package><subpackage>Metamodel</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><version>SVN: $Revision: 73 $</version><link>http://pear.php.net/package/PHP_UML</link><link>http://www.omg.org/mof/</link><since>$Date: 2008-12-17 01:30:18 +0100 (mer., 17 déc. 2008) $</since></php:docblock><php:docblock base_Element="496002153e56a"><category>PHP</category><package>PHP_UML</package><subpackage>Metamodel</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><version>SVN: $Revision: 73 $</version><link>http://pear.php.net/package/PHP_UML</link><link>http://www.omg.org/mof/</link><since>$Date: 2008-12-17 01:30:18 +0100 (mer., 17 déc. 2008) $</since></php:docblock><php:docblock base_Element="496002153f292"><category>PHP</category><package>PHP_UML</package><subpackage>Metamodel</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><version>SVN: $Revision: 73 $</version><link>http://pear.php.net/package/PHP_UML</link><link>http://www.omg.org/mof/</link><since>$Date: 2008-12-17 01:30:18 +0100 (mer., 17 déc. 2008) $</since></php:docblock><php:docblock base_Element="4960021540b16"><category>PHP</category><package>PHP_UML</package><subpackage>Output</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><link>http://pear.php.net/package/PHP_UML</link></php:docblock><php:docblock base_Element="4960021540e82"><param>string $outputDir Output directory</param><param>string $xslFile XSL file (template file)</param><param>string $xmlFile XMI file</param></php:docblock><php:docblock base_Element="49600215411e6"><param>string $outputDir Output directory</param><param>string $xslFile XSL file (template file)</param><param>string $xmlData The XMI data</param></php:docblock><php:docblock base_Element="49600215414c9"><param>string $outputDir Output folder</param><param>string $format Desired format (html, php...)</param><param>string $xmlData XMI code</param></php:docblock><php:docblock base_Element="49600215417f6"><param>string $outputDir Output folder</param><param>string $xslFile XSL file (template file)</param><param>DomDocument $xmlDom XMI data (Dom)</param><return>string (possible) messages raised during XSLT</return></php:docblock><php:docblock base_Element="4960021541ef3"><param>string $path Folder name</param></php:docblock><php:docblock base_Element="49600215421b6"><param>string $name File name</param><param>mixed $content Content (can be either a string, or a node-set)</param></php:docblock><php:docblock base_Element="496002154252a"><param>string $path Path to the folder that contains the XSL templates</param></php:docblock><php:docblock base_Element="49600215494af"><category>PHP</category><package>PHP_UML</package><subpackage>PHP</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license></php:docblock><php:docblock base_Element="49600215498fd"><var>PHP_UML_Metamodel_Superstructure</var></php:docblock><php:docblock base_Element="4960021549a02"><var>PHP_UML_Metamodel_File</var></php:docblock><php:docblock base_Element="4960021549af2"><var>bool</var></php:docblock><php:docblock base_Element="4960021549bf1"><var>bool</var></php:docblock><php:docblock base_Element="4960021549cdf"><var>PHP_UML_Metamodel_Package</var></php:docblock><php:docblock base_Element="4960021549dda"><var>string</var></php:docblock><php:docblock base_Element="4960021549ed5"><var>array Array of tokens</var></php:docblock><php:docblock base_Element="4960021549fc3"><var>array Array of tokens</var></php:docblock><php:docblock base_Element="496002154a0b0"><var>string</var></php:docblock><php:docblock base_Element="496002154a224"><var>string</var></php:docblock><php:docblock base_Element="496002154a36e"><var>array Associative array alias =&gt; namespace</var></php:docblock><php:docblock base_Element="496002154a44f"><param>string &amp;$model The instance of metamodel to fill</param><param>bool $docblocks Set to true to interpret docblocks (@package, types)</param><param>bool $dollar Set to true to keep the symbol $ in variable names</param></php:docblock><php:docblock base_Element="496002154a83c"><param>string $fileBase Base directory</param><param>string $filePath Pathfile (relative to $fileBase)</param></php:docblock><php:docblock base_Element="496002154b2e4"><param>array &amp;$tokens Tokens</param></php:docblock><php:docblock base_Element="496002154bade"><param>array &amp;$tokens Tokens</param></php:docblock><php:docblock base_Element="496002154c1a2"><param>array &amp;$tokens Tokens</param><param>PHP_UML_Metamodel_Interface &amp;$class A class or interface</param></php:docblock><php:docblock base_Element="496002154d387"><param>array &amp;$tokens Tokens</param><return>array Array of elements found</return></php:docblock><php:docblock base_Element="496002154da51"><param>array &amp;$tokens Tokens</param><param>PHP_UML_Metamodel_Interface &amp;$class Owning class/interface</param><return>PHP_UML_Metamodel_Operation The operation created</return></php:docblock><php:docblock base_Element="496002154e1ba"><param>array &amp;$tokens Tokens</param><param>PHP_UML_Metamodel_Operation &amp;$o Operation</param><return>PHP_UML_Metamodel_Parameter The parameter created</return></php:docblock><php:docblock base_Element="496002154ef40"><param>array &amp;$tokens Tokens</param><return>array An array((string) type, (string) default value)</return></php:docblock><php:docblock base_Element="496002154f703"><param>array &amp;$tokens Tokens</param></php:docblock><php:docblock base_Element="496002154fdd6"><param>array &amp;$tokens Tokens</param><return>string The value</return></php:docblock><php:docblock base_Element="49600215500c0"><param>array &amp;$tokens Tokens</param><return>string The value</return></php:docblock><php:docblock base_Element="49600215503f8"><param>array &amp;$tokens Tokens</param></php:docblock><php:docblock base_Element="496002155072d"><param>array &amp;$tokens Tokens</param></php:docblock><php:docblock base_Element="4960021550d8a"><param>array &amp;$tokens Tokens</param></php:docblock><php:docblock base_Element="496002155118a"><param>array &amp;$tokens Tokens</param><return>string The doc-comment, as a string</return></php:docblock><php:docblock base_Element="4960021551511"><param>string $name Name of the package to create</param><param>PHP_UML_Metamodel_Package $nestingPkg Enclosing package. If not provided,</param><return>PHP_UML_Metamodel_Package The package created (or the existing one)</return></php:docblock><php:docblock base_Element="4960021551a81"><param>string $name Name of the package to create</param><param>PHP_UML_Metamodel_Package $nestingPkg Enclosing package</param><return>PHP_UML_Metamodel_Package The package created (or the existing one)</return></php:docblock><php:docblock base_Element="4960021551fda"><param>string $class Class/Interface name</param><return>array Result array[current package, class name]</return></php:docblock><php:docblock base_Element="49600215525d3"><param>string $namespace An imported namespace</param><param>string $alias Alias (&quot;use ... as ...&quot;)</param></php:docblock><php:docblock base_Element="4960021552971"><param>string $path A qualified name (a class name like &quot;A\B\C&quot;)</param><return>string The full qualified name</return></php:docblock><php:docblock base_Element="4960021552ede"><param>string $text Text to search in</param><param>array &amp;$set Results (preg)</param><return>int Result (preg)</return></php:docblock><php:docblock base_Element="496002155325c"><param>string $text Doc comment</param><return>array Preg results</return></php:docblock><php:docblock base_Element="496002155345d"><param>string $text Doc comment</param><return>string The description</return></php:docblock><php:docblock base_Element="496002155389d"><param>string $desc The description</param><param>array $docs The docblocks of the element</param><param>PHP_UML_Metamodel_NamedElement &amp;$element The element</param></php:docblock><php:docblock base_Element="4960021553dfa"><param>string $text Text to filter</param><return>string Filtered text</return></php:docblock><php:docblock base_Element="4960021553fe5"><return>string</return></php:docblock><php:docblock base_Element="49600215541bf"><param>string $str Text to filter</param><return>string</return></php:docblock><php:docblock base_Element="4960021554429"><param>PHP_UML_Metamodel_Interface &amp;$c A class or interface</param><param>PHP_UML_Metamodel_Package &amp;$nestingPkg The enclosing package</param></php:docblock><php:docblock base_Element="4960021554775"><param>PHP_UML_Metamodel_Interface &amp;$c Class or interface object</param></php:docblock><php:docblock base_Element="49600215549df"><param>PHP_UML_Metamodel_NamedElement &amp;$c Element</param></php:docblock><php:docblock base_Element="4960021554d9a"><param>PHP_UML_Metamodel_NamedElement &amp;$p The element</param><param>string $type Explicit type (type hint)</param><param>string $token The token</param><param>string $default The (eventual) default value</param><param>string $varName The variable name</param><param>array $dbParam The preg-array of docblocks</param></php:docblock><php:docblock base_Element="49600215552bb"><param>string $token Token</param><param>string $defaultValue Value</param><return>string The type</return></php:docblock><php:docblock base_Element="4960021555613"><param>array $dbParam The array of params (obtained through a preg)</param><param>string $variable The name of the parameter you want to know the type</param><return>string The type</return></php:docblock><php:docblock base_Element="4960021557c8b"><category>PHP</category><package>PHP_UML</package><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><link>http://pear.php.net/package/PHP_UML</link></php:docblock><php:docblock base_Element="4960021557f94"><var>boolean</var></php:docblock><php:docblock base_Element="49600215580a8"><return>string</return></php:docblock><php:docblock base_Element="4960021558d3b"><category>PHP</category><package>PHP_UML</package><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><link>http://pear.php.net/package/PHP_UML</link></php:docblock><php:docblock base_Element="4960021558ed6"><var>array</var></php:docblock><php:docblock base_Element="4960021558fe1"><param>string $message The warning message to add</param></php:docblock><php:docblock base_Element="496002155a6e7"><category>PHP</category><package>PHP_UML</package><subpackage>XMI</subpackage><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license></php:docblock><php:docblock base_Element="496002155abfe"><param>string $prefix Prefix</param><return>string ID</return></php:docblock><php:docblock base_Element="496002155ae4f"><return>string</return></php:docblock><php:docblock base_Element="496002155afa1"><param>float $version XMI version</param><param>string $xmlEncoding XML encoding</param><return>PHP_UML_XMI_Builder An XMI builder object</return></php:docblock><php:docblock base_Element="496002155b2b5"><param>string $xmlEncoding XML encoding of the file</param></php:docblock><php:docblock base_Element="496002155b456"><param>PHP_UML_Metamodel_Package $package Base package</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155b7e9"><param>PHP_UML_Metamodel_Package $package Package to get the types of</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155bb73"><param>PHP_UML_Metamodel_Package $package Package to map to a component</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155cf30"><category>PHP</category><package>PHP_UML</package><subpackage>XMI</subpackage></php:docblock><php:docblock base_Element="496002155d04b"><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155d15b"><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155d250"><param>string &amp;$model Root package</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155d3c5"><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155d4c6"><param>PHP_UML_Metamodel_Package $package Package to insert</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155d628"><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155d71f"><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155d817"><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155da60"><param>PHP_UML_Metamodel_Package $package Package to code as a subsystem</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155dc36"><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155dd39"><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155de38"><param>PHP_UML_Metamodel_Stereotype $s Stereotype</param></php:docblock><php:docblock base_Element="496002155dff3"><param>PHP_UML_Type $type Datatype</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155e16e"><param>PHP_UML_Metamodel_Class &amp;$class Class</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155e2cd"><param>PHP_UML_Metamodel_Interface &amp;$interface Class</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155e428"><param>PHP_UML_Metamodel_Operation &amp;$operation Operation</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155e583"><param>PHP_UML_Metamodel_Parameter &amp;$parameter Parameter</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155e6e0"><param>PHP_UML_Metamodel_File $file File to add as an artifact</param><param>array &amp;$mf Manifested elements</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155e8d3"><param>PHP_UML_Metamodel_Package $package Package to add as a component</param><param>array $provided Set of providing classes</param><param>array $required Set of required classes (TODO)</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155eaf1"><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155ebea"><param>PHP_UML_Metamodel_TypedElement &amp;$parameter Element (datatype, class..)</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155ed54"><param>PHP_UML_Metamodel_Class &amp;$client Child element</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155eec6"><param>PHP_UML_Metamodel_Type &amp;$client Child element</param><return>mixed In XMI 1.x, this returns an array, because XMI 1 needs two</return></php:docblock><php:docblock base_Element="496002155f02f"><param>PHP_UML_Metamodel_Stereotype &amp;$s A stereotype object</param><param>string $annotatedElement The commented element</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155f20b"><return>string XMI code</return></php:docblock><php:docblock base_Element="496002155f316"><param>PHP_UML_Metamodel_Tag $tag Tag</param><return>string XMI code</return></php:docblock><php:docblock base_Element="4960021560f82"><category>PHP</category><package>PHP_UML</package><subpackage>XMI</subpackage><see>PHP_UML_XMI_Builder</see><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license></php:docblock><php:docblock base_Element="496002156454d"><param>PHP_UML_TypedElement &amp;$element Element</param><return>string XMI code</return></php:docblock><php:docblock base_Element="4960021566b35"><category>PHP</category><package>PHP_UML</package><subpackage>XMI</subpackage><see>PHP_UML_XMI_Builder</see><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license></php:docblock><php:docblock base_Element="4960021566ebf"><var>string</var></php:docblock><php:docblock base_Element="4960021569953"><return>string XMI Code</return></php:docblock><php:docblock base_Element="4960021569e03"><param>PHP_UML_Metamodel_Stereotype $s Stereotype</param><return>unknown</return></php:docblock><php:docblock base_Element="496002156a2cd"><param>string $client Name of the client</param><param>string $supplier Name of the supplier</param><param>string $name Name of the relation</param><return>string XMI code</return></php:docblock><php:docblock base_Element="496002156c4ee"><category>PHP</category><package>PHP_UML</package><author>Baptiste Autin &lt;ohlesbeauxjours@yahoo.fr&gt;</author><license>http://www.gnu.org/licenses/lgpl.html LGPL License 3</license><link>http://pear.php.net/package/PHP_UML</link><link>http://www.baptisteautin.com/projects/PHP_UML/</link><see>PHP_UML_Metamodel_Superstructure</see></php:docblock><php:docblock base_Element="496002156c7f7"><var>boolean</var></php:docblock><php:docblock base_Element="496002156c8f2"><var>boolean</var></php:docblock><php:docblock base_Element="496002156c9eb"><var>boolean</var></php:docblock><php:docblock base_Element="496002156cb0f"><var>boolean</var></php:docblock><php:docblock base_Element="496002156cc09"><var>boolean</var></php:docblock><php:docblock base_Element="496002156ccda"><var>PHP_UML::Metamodel::PHP_UML_Metamodel_Superstructure</var></php:docblock><php:docblock base_Element="496002156d2a3"><var>array</var></php:docblock><php:docblock base_Element="496002156d493"><var>array</var></php:docblock><php:docblock base_Element="496002156d5e7"><var>array</var></php:docblock><php:docblock base_Element="496002156d6fc"><var>array();</var></php:docblock><php:docblock base_Element="496002156d7f2"><var>string</var></php:docblock><php:docblock base_Element="496002156d905"><var>PHP_UML_PHP_Parser</var></php:docblock><php:docblock base_Element="496002156d9ef"><var>PHP_UML_XMI_Builder</var></php:docblock><php:docblock base_Element="496002156dbc5"><param>mixed $files File(s) to parse. Can be a single file,</param><param>string $model Model name</param></php:docblock><php:docblock base_Element="496002156ddf7"><param>string $filepath Filename</param></php:docblock><php:docblock base_Element="496002156df79"><param>mixed $pathes Array, or string of comma-separated-values</param></php:docblock><php:docblock base_Element="496002156e330"><param>mixed $patterns List of patterns (string or array)</param></php:docblock><php:docblock base_Element="496002156e5c2"><param>mixed $patterns List of patterns (string or array)</param></php:docblock><php:docblock base_Element="496002156e849"><param>mixed $directories Directory path(es). Can be a single path,</param><param>string $model Model name</param></php:docblock><php:docblock base_Element="496002156ea77"><param>string $modelName Model name (likely, the name of your application)</param></php:docblock><php:docblock base_Element="496002156f334"><param>float $version XMI Version For XMI 1.x, any value below 2.</param><param>string $encoding XML Encoding (iso-8859-1 or utf-8)</param></php:docblock><php:docblock base_Element="496002156fa0f"><param>string $outputFile Filename</param></php:docblock><php:docblock base_Element="496002156fca1"><param>string $format Desired format (&quot;xmi&quot;, &quot;html&quot;, &quot;php&quot;)</param><param>string $outputDir Output directory</param></php:docblock><php:docblock base_Element="49600215700ad"><return>string The XMI code</return></php:docblock><php:docblock base_Element="49600215701f2"><param>PHP_UML_Metamodel_Package $package Package</param></php:docblock><php:docblock base_Element="496002157043a"><param>PHP_UML_Metamodel_Package $package Root package to browse into</param></php:docblock><php:docblock base_Element="4960021570609"><param>PHP_UML_Metamodel_Package $package The root deployment package</param></php:docblock><php:docblock base_Element="4960021570950"><param>string $class Class name</param></php:docblock></xmi:XMI>